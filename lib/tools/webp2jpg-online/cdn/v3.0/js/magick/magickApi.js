/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function __awaiter(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{l(r.next(e))}catch(e){o(e)}}function s(e){try{l(r.throw(e))}catch(e){o(e)}}function l(e){e.done?i(e.value):new n((function(t){t(e.value)})).then(a,s)}l((r=r.apply(e,t||[])).next())}))}const pMap=(e,t,n)=>new Promise(((r,i)=>{if(n=Object.assign({concurrency:1/0},n),"function"!=typeof t)throw new TypeError("Mapper function is required");const{concurrency:o}=n;if(!("number"==typeof o&&o>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${o}\` (${typeof o})`);const a=[],s=e[Symbol.iterator]();let l=!1,u=!1,c=0,p=0;const m=()=>{if(l)return;const e=s.next(),n=p;if(p++,e.done)return u=!0,void(0===c&&r(a));c++,Promise.resolve(e.value).then((e=>t(e,n))).then((e=>{a[n]=e,c--,m()}),(e=>{l=!0,i(e)}))};for(let e=0;e<o&&(m(),!u);e++);}));var pMap_1=pMap,default_1=pMap;function values(e){return Object.keys(e).map((t=>e[t]))}function flat(e){return e.reduce(((e,t)=>e.concat(t)))}function arrayToCliOne(e){return e.map((e=>e+"")).map((e=>e.trim().match(/\s/)?`'${e}'`:e)).map((e=>"("===e.trim()?"\\(":")"===e.trim()?"\\)":e)).join(" ")}function arrayToCli(e){return("string"==typeof e[0]?[e]:e).map(arrayToCliOne).join("\n")}function cliToArrayOne(e){let t=!1;const n=[0];for(let r=0;r<e.length;r++){const i=e[r];i.match(/[\s]/im)&&!t&&n.push(r),"'"===i&&(t=!t)}n.push(e.length);return n.map(((t,r)=>e.substring(0===r?0:n[r-1],n[r]).trim())).filter((e=>!!e)).map((e=>e.startsWith("'")?e.substring(1,e.length):e)).map((e=>e.endsWith("'")?e.substring(0,e.length-1):e)).map((e=>"\\("===e?"(":"\\)"===e?")":e))}function cliToArray(e){const t=e.split("\n").map((e=>e.trim())).map(cliToArrayOne).filter((e=>e&&e.length)),n=[];let r=[];for(let e=0;e<t.length;e++){const i=t[e];"\\"!==i[i.length-1]?(r=r.concat(i),n.push(r),r=[]):r=r.concat(i.slice(0,i.length-1))}return n}function asCommand(e){return"string"==typeof e?asCommand([e]):e[0]?"string"==typeof e[0]?flat(e.map((e=>cliToArray(e)))):e:[]}function blobToUint8Array(e){return new Promise((t=>{const n=new FileReader;n.onload=e=>{const n=e.target.result;t(new Uint8Array(n))},n.readAsArrayBuffer(e)}))}function blobToString(e){return new Promise((t=>{const n=new FileReader;n.addEventListener("loadend",(e=>{const n=e.srcElement.result;t(n)})),n.readAsText(e)}))}function isInputFile(e){return!!e.content}function isOutputFile(e){return!!e.blob}function uint8ArrayToString(e,t="utf-8"){return new TextDecoder(t).decode(e)}function readFileAsText(e){return __awaiter(this,void 0,void 0,(function*(){return isInputFile(e)?uint8ArrayToString(e.content):isOutputFile(e)?yield blobToString(e.blob):void 0}))}function isImage(e){return __awaiter(this,void 0,void 0,(function*(){const{exitCode:t}=yield execute$$1({inputFiles:[yield asInputFile(e)],commands:`identify ${e.name}`});return 0===t}))}function buildInputFile(e,t=getFileName(e)){return __awaiter(this,void 0,void 0,(function*(){const n=yield fetch(e),r=yield n.arrayBuffer(),i=new Uint8Array(r);return{name:t,content:i}}))}function uint8ArrayToBlob(e){return new Blob([e])}function outputFileToInputFile(e,t=e.name){return __awaiter(this,void 0,void 0,(function*(){return{name:t,content:yield blobToUint8Array(e.blob)}}))}function inputFileToOutputFile(e,t=e.name){return{name:t,blob:uint8ArrayToBlob(e.content)}}function asInputFile(e,t=e.name){return __awaiter(this,void 0,void 0,(function*(){let n;return n=isOutputFile(e)?yield outputFileToInputFile(e):e,n.name=t,n}))}function asOutputFile(e,t=e.name){return __awaiter(this,void 0,void 0,(function*(){let n;return n=isInputFile(e)?inputFileToOutputFile(e):e,n.name=t,n}))}function getFileName(e){try{return decodeURIComponent(new URL(e).pathname.split("/").pop())}catch(t){const n=`http://foo.com/${e}`;try{return decodeURIComponent(new URL(n).pathname.split("/").pop())}catch(t){return e}}}function getFileNameExtension(e){const t=getFileName(e);return t.substring(t.lastIndexOf(".")+1,t.length)}function loadImageElement$$1(e,t,n=!1){return __awaiter(this,void 0,void 0,(function*(){t.src=yield buildImageSrc$$1(e,n)}))}function buildImageSrc$$1(e,t=!1){return __awaiter(this,void 0,void 0,(function*(){let n=e;const r=getFileNameExtension(e.name);if(!r||t&&-1===browserSupportedImageExtensions.indexOf(r)){const{outputFiles:t}=yield execute$$1({inputFiles:[yield asInputFile(e)],commands:`convert ${e.name} output.png`});t[0].name=e.name,n=t[0]}const i=yield asOutputFile(n);return URL.createObjectURL(i.blob)}))}function getInputFilesFromHtmlInputElement$$1(e){return __awaiter(this,void 0,void 0,(function*(){return(yield inputFileToUint8Array(e)).map((e=>({name:e.file.name,content:e.content})))}))}pMap_1.default=default_1;const browserSupportedImageExtensions=["gif","png","jpg","webp"];function inputFileFiles(e){const t=[];for(let n=0;n<e.files.length;n++){const r=e.files.item(n);t.push(r)}return t}function inputFileToUint8Array(e){return __awaiter(this,void 0,void 0,(function*(){return Promise.all(inputFileFiles(e).map((e=>__awaiter(this,void 0,void 0,(function*(){const t=yield new Promise((t=>{const n=new FileReader;n.addEventListener("loadend",(e=>{t(new Uint8Array(n.result))})),n.readAsArrayBuffer(e)}));return{file:e,content:t}})))))}))}function getPixelColor$$1(e,t,n){return __awaiter(this,void 0,void 0,(function*(){const r=yield executeAndReturnOutputFile$$1({inputFiles:[yield asInputFile(e)],commands:`convert ${e.name} -format '%[pixel:p{${t},${n}}]' info:info.txt`});return yield readFileAsText(r)}))}let builtInImages;const builtInImageNames$$1=["rose:","logo:","wizard:","granite:","netscape:"];function getBuiltInImages$$1(){return __awaiter(this,void 0,void 0,(function*(){return builtInImages||(builtInImages=yield pMap_1(builtInImageNames$$1,(e=>__awaiter(this,void 0,void 0,(function*(){const t=yield extractInfo$$1(e),{outputFiles:n}=yield execute$$1({commands:`convert ${e} output1.${t[0].image.format.toLowerCase()}`});return n[0].name=e,yield asInputFile(n[0])}))))),builtInImages}))}function getBuiltInImage$$1(e){return __awaiter(this,void 0,void 0,(function*(){return(yield getBuiltInImages$$1()).find((t=>t.name===e))}))}function compare$$1(e,t,n=.015){return __awaiter(this,void 0,void 0,(function*(){return(yield compareNumber$$1(e,t))<=n}))}function compareNumber$$1(e,t){return __awaiter(this,void 0,void 0,(function*(){const n=[];let r,i;if("string"!=typeof e){const t=yield asInputFile(e);n.push(t),r=t.name}else r=e;if("string"!=typeof t){const e=yield asInputFile(t);n.push(e),i=e.name}else i=t;const o=yield Call(n,["convert",r,i,"-resize","256x256^!","-metric","RMSE","-format","%[distortion]","-compare","info:info.txt"]),a=yield blobToString(o[0].blob);return parseFloat(a)}))}function extractInfo$$1(e){return __awaiter(this,void 0,void 0,(function*(){let t,n;"string"!=typeof e?(n=[yield asInputFile(e)],t=n[0].name):(t=e,n=[]);const r=yield Call(n,["convert",t,"info.json"]);try{return JSON.parse(yield blobToString(r[0].blob))}catch(e){return[{error:e}]}}))}function getConfigureFolders$$1(){return __awaiter(this,void 0,void 0,(function*(){const e=yield execute$$1("convert -debug configure rose: info:"),t="Searching for configure file:";return e.stderr.filter((e=>e.includes(t))).map((e=>e.substring(e.indexOf(t)+29,e.length))).map((e=>e.replace(/\/\//g,"/"))).map((e=>e.substring(0,e.lastIndexOf("/")))).map((e=>e.replace(/"/g,"").trim()))}))}const knownSupportedReadWriteImageFormats$$1=["jpg","png","psd","tiff","xcf","gif","bmp","tga","miff","ico","dcm","xpm","pcx","fits","ppm","pgm","pfm","mng","hdr","dds","otb","txt"];function executeOne$$1(e){return __awaiter(this,void 0,void 0,(function*(){const t=asExecuteConfig$$1(e);let n={stderr:[],stdout:[],outputFiles:[],exitCode:1};try{t.inputFiles=t.inputFiles||[];const e=asCommand(t.commands)[0],r=performance.now();return executeListeners.forEach((t=>t.beforeExecute({command:e,took:performance.now()-r,id:r}))),n=yield call(t.inputFiles,e.map((e=>e+""))),executeListeners.forEach((t=>t.afterExecute({command:e,took:performance.now()-r,id:r}))),n.exitCode?Object.assign({},n,{errors:["exit code: "+n.exitCode+" stderr: "+n.stderr.join("\n")]}):Object.assign({},n,{errors:[void 0]})}catch(e){return Object.assign({},n,{errors:[e+", exit code: "+n.exitCode+", stderr: "+n.stderr.join("\n")]})}}))}function isExecuteCommand$$1(e){return!!e.commands}function asExecuteConfig$$1(e){return isExecuteCommand$$1(e)?e:{inputFiles:[],commands:e}}function executeAndReturnOutputFile$$1(e,t){return __awaiter(this,void 0,void 0,(function*(){const n=asExecuteConfig$$1(e),r=yield execute$$1(n);return t?r.outputFiles.find((e=>e.name===t)):r.outputFiles.length&&r.outputFiles[0]||void 0}))}const executeListeners=[];function addExecuteListener$$1(e){executeListeners.push(e)}function execute$$1(e){return __awaiter(this,void 0,void 0,(function*(){const t=asExecuteConfig$$1(e);t.inputFiles=t.inputFiles||[];const n={},r={};t.inputFiles.forEach((e=>{r[e.name]=e}));let i=[];const o=[];let a=[],s=[];const l=asCommand(t.commands);yield pMap_1(l,(function(e){return __awaiter(this,void 0,void 0,(function*(){const t={inputFiles:values(r),commands:[e]},l=yield executeOne$$1(t);o.push(l),i=i.concat(l.errors||[]),a=a.concat(l.stdout||[]),s=s.concat(l.stderr||[]),yield pMap_1(l.outputFiles,(e=>__awaiter(this,void 0,void 0,(function*(){n[e.name]=e;const t=yield asInputFile(e);r[t.name]=t}))))}))}),{concurrency:1});const u=o.find((e=>0!==e.exitCode));return{outputFiles:values(n),errors:i,results:o,stdout:a,stderr:s,exitCode:u?u.exitCode:0}}))}class ImageHomeImpl{constructor(){this.images={},this.builtInImagesAdded=!1}get(e){return this.images[e]}remove(e){const t=[];return Object.keys(this.images).forEach((n=>{-1!==e.indexOf(n)&&(t.push(this.images[n]),delete this.images[n])})),t}getAll(){return __awaiter(this,void 0,void 0,(function*(){return yield Promise.all(values(this.images))}))}register(e,t=e.name){const n=asInputFile(e);return this.images[t]=n,this.images[t].then((()=>{n.resolved=!0})),n}isRegistered(e,t=!0){return this.images[e]&&t&&this.images[e].resolved}addBuiltInImages(){return __awaiter(this,void 0,void 0,(function*(){this.builtInImagesAdded||(yield pMap_1(yield getBuiltInImages$$1(),(e=>this.register(e))),this.builtInImagesAdded=!0)}))}}function createImageHome$$1(){return new ImageHomeImpl}class ExecutionContextImpl{constructor(e=createImageHome$$1()){this.imageHome=e}execute(e){return __awaiter(this,void 0,void 0,(function*(){const t=asExecuteConfig$$1(e);t.inputFiles.forEach((e=>{this.imageHome.register(e)}));const n=yield this.imageHome.getAll(),r=yield execute$$1(Object.assign({},t,{inputFiles:n}));return r.outputFiles.forEach((e=>{this.imageHome.register(e)})),r}))}addFiles(e){e.forEach((e=>this.imageHome.register(e)))}getAllFiles(){return __awaiter(this,void 0,void 0,(function*(){return yield this.imageHome.getAll()}))}getFile(e){return __awaiter(this,void 0,void 0,(function*(){return yield this.imageHome.get(e)}))}addBuiltInImages(){return __awaiter(this,void 0,void 0,(function*(){return this.imageHome.addBuiltInImages()}))}removeFiles(e){return this.imageHome.remove(e)}static create(e){if(e&&!e.imageHome)throw new Error("Dont know how to inherit from other ExecutionContext implementation than this one");return new ExecutionContextImpl(e&&e.imageHome)}}function newExecutionContext$$1(e){return ExecutionContextImpl.create(e)}var commonjsGlobal="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function createCommonjsModule(e,t){return e(t={exports:{}},t.exports),t.exports}var stackframe=createCommonjsModule((function(e,t){e.exports=function(){function e(e){return!isNaN(parseFloat(e))&&isFinite(e)}function t(e){return e.charAt(0).toUpperCase()+e.substring(1)}function n(e){return function(){return this[e]}}var r=["isConstructor","isEval","isNative","isToplevel"],i=["columnNumber","lineNumber"],o=["fileName","functionName","source"],a=["args"],s=r.concat(i,o,a);function l(e){if(e instanceof Object)for(var n=0;n<s.length;n++)e.hasOwnProperty(s[n])&&void 0!==e[s[n]]&&this["set"+t(s[n])](e[s[n]])}l.prototype={getArgs:function(){return this.args},setArgs:function(e){if("[object Array]"!==Object.prototype.toString.call(e))throw new TypeError("Args must be an Array");this.args=e},getEvalOrigin:function(){return this.evalOrigin},setEvalOrigin:function(e){if(e instanceof l)this.evalOrigin=e;else{if(!(e instanceof Object))throw new TypeError("Eval Origin must be an Object or StackFrame");this.evalOrigin=new l(e)}},toString:function(){return(this.getFunctionName()||"{anonymous}")+"("+(this.getArgs()||[]).join(",")+")"+(this.getFileName()?"@"+this.getFileName():"")+(e(this.getLineNumber())?":"+this.getLineNumber():"")+(e(this.getColumnNumber())?":"+this.getColumnNumber():"")}};for(var u=0;u<r.length;u++)l.prototype["get"+t(r[u])]=n(r[u]),l.prototype["set"+t(r[u])]=function(e){return function(t){this[e]=Boolean(t)}}(r[u]);for(var c=0;c<i.length;c++)l.prototype["get"+t(i[c])]=n(i[c]),l.prototype["set"+t(i[c])]=function(t){return function(n){if(!e(n))throw new TypeError(t+" must be a Number");this[t]=Number(n)}}(i[c]);for(var p=0;p<o.length;p++)l.prototype["get"+t(o[p])]=n(o[p]),l.prototype["set"+t(o[p])]=function(e){return function(t){this[e]=String(t)}}(o[p]);return l}()})),errorStackParser=createCommonjsModule((function(e,t){var n,r,i,o;e.exports=(n=stackframe,r=/(^|@)\S+\:\d+/,i=/^\s*at .*(\S+\:\d+|\(native\))/m,o=/^(eval@)?(\[native code\])?$/,{parse:function(e){if(void 0!==e.stacktrace||void 0!==e["opera#sourceloc"])return this.parseOpera(e);if(e.stack&&e.stack.match(i))return this.parseV8OrIE(e);if(e.stack)return this.parseFFOrSafari(e);throw new Error("Cannot parse given Error object")},extractLocation:function(e){if(-1===e.indexOf(":"))return[e];var t=/(.+?)(?:\:(\d+))?(?:\:(\d+))?$/.exec(e.replace(/[\(\)]/g,""));return[t[1],t[2]||void 0,t[3]||void 0]},parseV8OrIE:function(e){return e.stack.split("\n").filter((function(e){return!!e.match(i)}),this).map((function(e){e.indexOf("(eval ")>-1&&(e=e.replace(/eval code/g,"eval").replace(/(\(eval at [^\()]*)|(\)\,.*$)/g,""));var t=e.replace(/^\s+/,"").replace(/\(eval code/g,"(").split(/\s+/).slice(1),r=this.extractLocation(t.pop()),i=t.join(" ")||void 0,o=["eval","<anonymous>"].indexOf(r[0])>-1?void 0:r[0];return new n({functionName:i,fileName:o,lineNumber:r[1],columnNumber:r[2],source:e})}),this)},parseFFOrSafari:function(e){return e.stack.split("\n").filter((function(e){return!e.match(o)}),this).map((function(e){if(e.indexOf(" > eval")>-1&&(e=e.replace(/ line (\d+)(?: > eval line \d+)* > eval\:\d+\:\d+/g,":$1")),-1===e.indexOf("@")&&-1===e.indexOf(":"))return new n({functionName:e});var t=/((.*".+"[^@]*)?[^@]*)(?:@)/,r=e.match(t),i=r&&r[1]?r[1]:void 0,o=this.extractLocation(e.replace(t,""));return new n({functionName:i,fileName:o[0],lineNumber:o[1],columnNumber:o[2],source:e})}),this)},parseOpera:function(e){return!e.stacktrace||e.message.indexOf("\n")>-1&&e.message.split("\n").length>e.stacktrace.split("\n").length?this.parseOpera9(e):e.stack?this.parseOpera11(e):this.parseOpera10(e)},parseOpera9:function(e){for(var t=/Line (\d+).*script (?:in )?(\S+)/i,r=e.message.split("\n"),i=[],o=2,a=r.length;o<a;o+=2){var s=t.exec(r[o]);s&&i.push(new n({fileName:s[2],lineNumber:s[1],source:r[o]}))}return i},parseOpera10:function(e){for(var t=/Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i,r=e.stacktrace.split("\n"),i=[],o=0,a=r.length;o<a;o+=2){var s=t.exec(r[o]);s&&i.push(new n({functionName:s[3]||void 0,fileName:s[2],lineNumber:s[1],source:r[o]}))}return i},parseOpera11:function(e){return e.stack.split("\n").filter((function(e){return!!e.match(r)&&!e.match(/^Error created at/)}),this).map((function(e){var t,r=e.split("@"),i=this.extractLocation(r.pop()),o=r.shift()||"",a=o.replace(/<anonymous function(: (\w+))?>/,"$2").replace(/\([^\)]*\)/g,"")||void 0;o.match(/\(([^\)]*)\)/)&&(t=o.replace(/^[^\(]+\(([^\)]*)\)$/,"$1"));var s=void 0===t||"[arguments not available]"===t?void 0:t.split(",");return new n({functionName:a,args:s,fileName:i[0],lineNumber:i[1],columnNumber:i[2],source:e})}),this)}})})),stackGenerator=createCommonjsModule((function(e,t){var n;e.exports=(n=stackframe,{backtrace:function(e){var t=[],r=10;"object"==typeof e&&"number"==typeof e.maxStackSize&&(r=e.maxStackSize);for(var i=arguments.callee;i&&t.length<r&&i.arguments;){for(var o=new Array(i.arguments.length),a=0;a<o.length;++a)o[a]=i.arguments[a];/function(?:\s+([\w$]+))+\s*\(/.test(i.toString())?t.push(new n({functionName:RegExp.$1||void 0,args:o})):t.push(new n({args:o}));try{i=i.caller}catch(e){break}}return t}})})),util=createCommonjsModule((function(e,t){t.getArg=function(e,t,n){if(t in e)return e[t];if(3===arguments.length)return n;throw new Error('"'+t+'" is a required argument.')};var n=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/,r=/^data:.+\,.+$/;function i(e){var t=e.match(n);return t?{scheme:t[1],auth:t[2],host:t[3],port:t[4],path:t[5]}:null}function o(e){var t="";return e.scheme&&(t+=e.scheme+":"),t+="//",e.auth&&(t+=e.auth+"@"),e.host&&(t+=e.host),e.port&&(t+=":"+e.port),e.path&&(t+=e.path),t}function a(e){var n=e,r=i(e);if(r){if(!r.path)return e;n=r.path}for(var a,s=t.isAbsolute(n),l=n.split(/\/+/),u=0,c=l.length-1;c>=0;c--)"."===(a=l[c])?l.splice(c,1):".."===a?u++:u>0&&(""===a?(l.splice(c+1,u),u=0):(l.splice(c,2),u--));return""===(n=l.join("/"))&&(n=s?"/":"."),r?(r.path=n,o(r)):n}t.urlParse=i,t.urlGenerate=o,t.normalize=a,t.join=function(e,t){""===e&&(e="."),""===t&&(t=".");var n=i(t),s=i(e);if(s&&(e=s.path||"/"),n&&!n.scheme)return s&&(n.scheme=s.scheme),o(n);if(n||t.match(r))return t;if(s&&!s.host&&!s.path)return s.host=t,o(s);var l="/"===t.charAt(0)?t:a(e.replace(/\/+$/,"")+"/"+t);return s?(s.path=l,o(s)):l},t.isAbsolute=function(e){return"/"===e.charAt(0)||!!e.match(n)},t.relative=function(e,t){""===e&&(e="."),e=e.replace(/\/$/,"");for(var n=0;0!==t.indexOf(e+"/");){var r=e.lastIndexOf("/");if(r<0)return t;if((e=e.slice(0,r)).match(/^([^\/]+:\/)?\/*$/))return t;++n}return Array(n+1).join("../")+t.substr(e.length+1)};var s=!("__proto__"in Object.create(null));function l(e){return e}function u(e){if(!e)return!1;var t=e.length;if(t<9)return!1;if(95!==e.charCodeAt(t-1)||95!==e.charCodeAt(t-2)||111!==e.charCodeAt(t-3)||116!==e.charCodeAt(t-4)||111!==e.charCodeAt(t-5)||114!==e.charCodeAt(t-6)||112!==e.charCodeAt(t-7)||95!==e.charCodeAt(t-8)||95!==e.charCodeAt(t-9))return!1;for(var n=t-10;n>=0;n--)if(36!==e.charCodeAt(n))return!1;return!0}function c(e,t){return e===t?0:e>t?1:-1}t.toSetString=s?l:function(e){return u(e)?"$"+e:e},t.fromSetString=s?l:function(e){return u(e)?e.slice(1):e},t.compareByOriginalPositions=function(e,t,n){var r=e.source-t.source;return 0!==r||0!==(r=e.originalLine-t.originalLine)||0!==(r=e.originalColumn-t.originalColumn)||n||0!==(r=e.generatedColumn-t.generatedColumn)||0!==(r=e.generatedLine-t.generatedLine)?r:e.name-t.name},t.compareByGeneratedPositionsDeflated=function(e,t,n){var r=e.generatedLine-t.generatedLine;return 0!==r||0!==(r=e.generatedColumn-t.generatedColumn)||n||0!==(r=e.source-t.source)||0!==(r=e.originalLine-t.originalLine)||0!==(r=e.originalColumn-t.originalColumn)?r:e.name-t.name},t.compareByGeneratedPositionsInflated=function(e,t){var n=e.generatedLine-t.generatedLine;return 0!==n||0!==(n=e.generatedColumn-t.generatedColumn)||0!==(n=c(e.source,t.source))||0!==(n=e.originalLine-t.originalLine)||0!==(n=e.originalColumn-t.originalColumn)?n:c(e.name,t.name)}})),util_1=util.getArg,util_2=util.urlParse,util_3=util.urlGenerate,util_4=util.normalize,util_5=util.join,util_6=util.isAbsolute,util_7=util.relative,util_8=util.toSetString,util_9=util.fromSetString,util_10=util.compareByOriginalPositions,util_11=util.compareByGeneratedPositionsDeflated,util_12=util.compareByGeneratedPositionsInflated,binarySearch=createCommonjsModule((function(e,t){function n(e,r,i,o,a,s){var l=Math.floor((r-e)/2)+e,u=a(i,o[l],!0);return 0===u?l:u>0?r-l>1?n(l,r,i,o,a,s):s==t.LEAST_UPPER_BOUND?r<o.length?r:-1:l:l-e>1?n(e,l,i,o,a,s):s==t.LEAST_UPPER_BOUND?l:e<0?-1:e}t.GREATEST_LOWER_BOUND=1,t.LEAST_UPPER_BOUND=2,t.search=function(e,r,i,o){if(0===r.length)return-1;var a=n(-1,r.length,e,r,i,o||t.GREATEST_LOWER_BOUND);if(a<0)return-1;for(;a-1>=0&&0===i(r[a],r[a-1],!0);)--a;return a}})),binarySearch_1=binarySearch.GREATEST_LOWER_BOUND,binarySearch_2=binarySearch.LEAST_UPPER_BOUND,binarySearch_3=binarySearch.search,has=Object.prototype.hasOwnProperty;function ArraySet(){this._array=[],this._set=Object.create(null)}ArraySet.fromArray=function(e,t){for(var n=new ArraySet,r=0,i=e.length;r<i;r++)n.add(e[r],t);return n},ArraySet.prototype.size=function(){return Object.getOwnPropertyNames(this._set).length},ArraySet.prototype.add=function(e,t){var n=util.toSetString(e),r=has.call(this._set,n),i=this._array.length;r&&!t||this._array.push(e),r||(this._set[n]=i)},ArraySet.prototype.has=function(e){var t=util.toSetString(e);return has.call(this._set,t)},ArraySet.prototype.indexOf=function(e){var t=util.toSetString(e);if(has.call(this._set,t))return this._set[t];throw new Error('"'+e+'" is not in the set.')},ArraySet.prototype.at=function(e){if(e>=0&&e<this._array.length)return this._array[e];throw new Error("No element indexed by "+e)},ArraySet.prototype.toArray=function(){return this._array.slice()};var ArraySet_1=ArraySet,arraySet={ArraySet:ArraySet_1},intToCharMap="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""),encode=function(e){if(0<=e&&e<intToCharMap.length)return intToCharMap[e];throw new TypeError("Must be between 0 and 63: "+e)},decode=function(e){return 65<=e&&e<=90?e-65:97<=e&&e<=122?e-97+26:48<=e&&e<=57?e-48+52:43==e?62:47==e?63:-1},base64={encode:encode,decode:decode},VLQ_BASE_SHIFT=5,VLQ_BASE=1<<VLQ_BASE_SHIFT,VLQ_BASE_MASK=VLQ_BASE-1,VLQ_CONTINUATION_BIT=VLQ_BASE;function toVLQSigned(e){return e<0?1+(-e<<1):0+(e<<1)}function fromVLQSigned(e){var t=e>>1;return 1==(1&e)?-t:t}var encode$1=function(e){var t,n="",r=toVLQSigned(e);do{t=r&VLQ_BASE_MASK,(r>>>=VLQ_BASE_SHIFT)>0&&(t|=VLQ_CONTINUATION_BIT),n+=base64.encode(t)}while(r>0);return n},decode$1=function(e,t,n){var r,i,o=e.length,a=0,s=0;do{if(t>=o)throw new Error("Expected more digits in base 64 VLQ value.");if(-1===(i=base64.decode(e.charCodeAt(t++))))throw new Error("Invalid base64 digit: "+e.charAt(t-1));r=!!(i&VLQ_CONTINUATION_BIT),a+=(i&=VLQ_BASE_MASK)<<s,s+=VLQ_BASE_SHIFT}while(r);n.value=fromVLQSigned(a),n.rest=t},base64Vlq={encode:encode$1,decode:decode$1};function swap(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function randomIntInRange(e,t){return Math.round(e+Math.random()*(t-e))}function doQuickSort(e,t,n,r){if(n<r){var i=n-1;swap(e,randomIntInRange(n,r),r);for(var o=e[r],a=n;a<r;a++)t(e[a],o)<=0&&swap(e,i+=1,a);swap(e,i+1,a);var s=i+1;doQuickSort(e,t,n,s-1),doQuickSort(e,t,s+1,r)}}var quickSort_1=function(e,t){doQuickSort(e,t,0,e.length-1)},quickSort={quickSort:quickSort_1},ArraySet$1=arraySet.ArraySet,quickSort$1=quickSort.quickSort;function SourceMapConsumer(e){var t=e;return"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,""))),null!=t.sections?new IndexedSourceMapConsumer(t):new BasicSourceMapConsumer(t)}SourceMapConsumer.fromSourceMap=function(e){return BasicSourceMapConsumer.fromSourceMap(e)},SourceMapConsumer.prototype._version=3,SourceMapConsumer.prototype.__generatedMappings=null,Object.defineProperty(SourceMapConsumer.prototype,"_generatedMappings",{get:function(){return this.__generatedMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__generatedMappings}}),SourceMapConsumer.prototype.__originalMappings=null,Object.defineProperty(SourceMapConsumer.prototype,"_originalMappings",{get:function(){return this.__originalMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__originalMappings}}),SourceMapConsumer.prototype._charIsMappingSeparator=function(e,t){var n=e.charAt(t);return";"===n||","===n},SourceMapConsumer.prototype._parseMappings=function(e,t){throw new Error("Subclasses must implement _parseMappings")},SourceMapConsumer.GENERATED_ORDER=1,SourceMapConsumer.ORIGINAL_ORDER=2,SourceMapConsumer.GREATEST_LOWER_BOUND=1,SourceMapConsumer.LEAST_UPPER_BOUND=2,SourceMapConsumer.prototype.eachMapping=function(e,t,n){var r,i=t||null;switch(n||SourceMapConsumer.GENERATED_ORDER){case SourceMapConsumer.GENERATED_ORDER:r=this._generatedMappings;break;case SourceMapConsumer.ORIGINAL_ORDER:r=this._originalMappings;break;default:throw new Error("Unknown order of iteration.")}var o=this.sourceRoot;r.map((function(e){var t=null===e.source?null:this._sources.at(e.source);return null!=t&&null!=o&&(t=util.join(o,t)),{source:t,generatedLine:e.generatedLine,generatedColumn:e.generatedColumn,originalLine:e.originalLine,originalColumn:e.originalColumn,name:null===e.name?null:this._names.at(e.name)}}),this).forEach(e,i)},SourceMapConsumer.prototype.allGeneratedPositionsFor=function(e){var t=util.getArg(e,"line"),n={source:util.getArg(e,"source"),originalLine:t,originalColumn:util.getArg(e,"column",0)};if(null!=this.sourceRoot&&(n.source=util.relative(this.sourceRoot,n.source)),!this._sources.has(n.source))return[];n.source=this._sources.indexOf(n.source);var r=[],i=this._findMapping(n,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,binarySearch.LEAST_UPPER_BOUND);if(i>=0){var o=this._originalMappings[i];if(void 0===e.column)for(var a=o.originalLine;o&&o.originalLine===a;)r.push({line:util.getArg(o,"generatedLine",null),column:util.getArg(o,"generatedColumn",null),lastColumn:util.getArg(o,"lastGeneratedColumn",null)}),o=this._originalMappings[++i];else for(var s=o.originalColumn;o&&o.originalLine===t&&o.originalColumn==s;)r.push({line:util.getArg(o,"generatedLine",null),column:util.getArg(o,"generatedColumn",null),lastColumn:util.getArg(o,"lastGeneratedColumn",null)}),o=this._originalMappings[++i]}return r};var SourceMapConsumer_1=SourceMapConsumer;function BasicSourceMapConsumer(e){var t=e;"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,"")));var n=util.getArg(t,"version"),r=util.getArg(t,"sources"),i=util.getArg(t,"names",[]),o=util.getArg(t,"sourceRoot",null),a=util.getArg(t,"sourcesContent",null),s=util.getArg(t,"mappings"),l=util.getArg(t,"file",null);if(n!=this._version)throw new Error("Unsupported version: "+n);r=r.map(String).map(util.normalize).map((function(e){return o&&util.isAbsolute(o)&&util.isAbsolute(e)?util.relative(o,e):e})),this._names=ArraySet$1.fromArray(i.map(String),!0),this._sources=ArraySet$1.fromArray(r,!0),this.sourceRoot=o,this.sourcesContent=a,this._mappings=s,this.file=l}function Mapping(){this.generatedLine=0,this.generatedColumn=0,this.source=null,this.originalLine=null,this.originalColumn=null,this.name=null}BasicSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype),BasicSourceMapConsumer.prototype.consumer=SourceMapConsumer,BasicSourceMapConsumer.fromSourceMap=function(e){var t=Object.create(BasicSourceMapConsumer.prototype),n=t._names=ArraySet$1.fromArray(e._names.toArray(),!0),r=t._sources=ArraySet$1.fromArray(e._sources.toArray(),!0);t.sourceRoot=e._sourceRoot,t.sourcesContent=e._generateSourcesContent(t._sources.toArray(),t.sourceRoot),t.file=e._file;for(var i=e._mappings.toArray().slice(),o=t.__generatedMappings=[],a=t.__originalMappings=[],s=0,l=i.length;s<l;s++){var u=i[s],c=new Mapping;c.generatedLine=u.generatedLine,c.generatedColumn=u.generatedColumn,u.source&&(c.source=r.indexOf(u.source),c.originalLine=u.originalLine,c.originalColumn=u.originalColumn,u.name&&(c.name=n.indexOf(u.name)),a.push(c)),o.push(c)}return quickSort$1(t.__originalMappings,util.compareByOriginalPositions),t},BasicSourceMapConsumer.prototype._version=3,Object.defineProperty(BasicSourceMapConsumer.prototype,"sources",{get:function(){return this._sources.toArray().map((function(e){return null!=this.sourceRoot?util.join(this.sourceRoot,e):e}),this)}}),BasicSourceMapConsumer.prototype._parseMappings=function(e,t){for(var n,r,i,o,a,s=1,l=0,u=0,c=0,p=0,m=0,d=e.length,g=0,h={},f={},M=[],C=[];g<d;)if(";"===e.charAt(g))s++,g++,l=0;else if(","===e.charAt(g))g++;else{for((n=new Mapping).generatedLine=s,o=g;o<d&&!this._charIsMappingSeparator(e,o);o++);if(i=h[r=e.slice(g,o)])g+=r.length;else{for(i=[];g<o;)base64Vlq.decode(e,g,f),a=f.value,g=f.rest,i.push(a);if(2===i.length)throw new Error("Found a source, but no line and column");if(3===i.length)throw new Error("Found a source and line, but no column");h[r]=i}n.generatedColumn=l+i[0],l=n.generatedColumn,i.length>1&&(n.source=p+i[1],p+=i[1],n.originalLine=u+i[2],u=n.originalLine,n.originalLine+=1,n.originalColumn=c+i[3],c=n.originalColumn,i.length>4&&(n.name=m+i[4],m+=i[4])),C.push(n),"number"==typeof n.originalLine&&M.push(n)}quickSort$1(C,util.compareByGeneratedPositionsDeflated),this.__generatedMappings=C,quickSort$1(M,util.compareByOriginalPositions),this.__originalMappings=M},BasicSourceMapConsumer.prototype._findMapping=function(e,t,n,r,i,o){if(e[n]<=0)throw new TypeError("Line must be greater than or equal to 1, got "+e[n]);if(e[r]<0)throw new TypeError("Column must be greater than or equal to 0, got "+e[r]);return binarySearch.search(e,t,i,o)},BasicSourceMapConsumer.prototype.computeColumnSpans=function(){for(var e=0;e<this._generatedMappings.length;++e){var t=this._generatedMappings[e];if(e+1<this._generatedMappings.length){var n=this._generatedMappings[e+1];if(t.generatedLine===n.generatedLine){t.lastGeneratedColumn=n.generatedColumn-1;continue}}t.lastGeneratedColumn=1/0}},BasicSourceMapConsumer.prototype.originalPositionFor=function(e){var t={generatedLine:util.getArg(e,"line"),generatedColumn:util.getArg(e,"column")},n=this._findMapping(t,this._generatedMappings,"generatedLine","generatedColumn",util.compareByGeneratedPositionsDeflated,util.getArg(e,"bias",SourceMapConsumer.GREATEST_LOWER_BOUND));if(n>=0){var r=this._generatedMappings[n];if(r.generatedLine===t.generatedLine){var i=util.getArg(r,"source",null);null!==i&&(i=this._sources.at(i),null!=this.sourceRoot&&(i=util.join(this.sourceRoot,i)));var o=util.getArg(r,"name",null);return null!==o&&(o=this._names.at(o)),{source:i,line:util.getArg(r,"originalLine",null),column:util.getArg(r,"originalColumn",null),name:o}}}return{source:null,line:null,column:null,name:null}},BasicSourceMapConsumer.prototype.hasContentsOfAllSources=function(){return!!this.sourcesContent&&(this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some((function(e){return null==e})))},BasicSourceMapConsumer.prototype.sourceContentFor=function(e,t){if(!this.sourcesContent)return null;if(null!=this.sourceRoot&&(e=util.relative(this.sourceRoot,e)),this._sources.has(e))return this.sourcesContent[this._sources.indexOf(e)];var n;if(null!=this.sourceRoot&&(n=util.urlParse(this.sourceRoot))){var r=e.replace(/^file:\/\//,"");if("file"==n.scheme&&this._sources.has(r))return this.sourcesContent[this._sources.indexOf(r)];if((!n.path||"/"==n.path)&&this._sources.has("/"+e))return this.sourcesContent[this._sources.indexOf("/"+e)]}if(t)return null;throw new Error('"'+e+'" is not in the SourceMap.')},BasicSourceMapConsumer.prototype.generatedPositionFor=function(e){var t=util.getArg(e,"source");if(null!=this.sourceRoot&&(t=util.relative(this.sourceRoot,t)),!this._sources.has(t))return{line:null,column:null,lastColumn:null};var n={source:t=this._sources.indexOf(t),originalLine:util.getArg(e,"line"),originalColumn:util.getArg(e,"column")},r=this._findMapping(n,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,util.getArg(e,"bias",SourceMapConsumer.GREATEST_LOWER_BOUND));if(r>=0){var i=this._originalMappings[r];if(i.source===n.source)return{line:util.getArg(i,"generatedLine",null),column:util.getArg(i,"generatedColumn",null),lastColumn:util.getArg(i,"lastGeneratedColumn",null)}}return{line:null,column:null,lastColumn:null}};var BasicSourceMapConsumer_1=BasicSourceMapConsumer;function IndexedSourceMapConsumer(e){var t=e;"string"==typeof e&&(t=JSON.parse(e.replace(/^\)\]\}'/,"")));var n=util.getArg(t,"version"),r=util.getArg(t,"sections");if(n!=this._version)throw new Error("Unsupported version: "+n);this._sources=new ArraySet$1,this._names=new ArraySet$1;var i={line:-1,column:0};this._sections=r.map((function(e){if(e.url)throw new Error("Support for url field in sections not implemented.");var t=util.getArg(e,"offset"),n=util.getArg(t,"line"),r=util.getArg(t,"column");if(n<i.line||n===i.line&&r<i.column)throw new Error("Section offsets must be ordered and non-overlapping.");return i=t,{generatedOffset:{generatedLine:n+1,generatedColumn:r+1},consumer:new SourceMapConsumer(util.getArg(e,"map"))}}))}IndexedSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype),IndexedSourceMapConsumer.prototype.constructor=SourceMapConsumer,IndexedSourceMapConsumer.prototype._version=3,Object.defineProperty(IndexedSourceMapConsumer.prototype,"sources",{get:function(){for(var e=[],t=0;t<this._sections.length;t++)for(var n=0;n<this._sections[t].consumer.sources.length;n++)e.push(this._sections[t].consumer.sources[n]);return e}}),IndexedSourceMapConsumer.prototype.originalPositionFor=function(e){var t={generatedLine:util.getArg(e,"line"),generatedColumn:util.getArg(e,"column")},n=binarySearch.search(t,this._sections,(function(e,t){var n=e.generatedLine-t.generatedOffset.generatedLine;return n||e.generatedColumn-t.generatedOffset.generatedColumn})),r=this._sections[n];return r?r.consumer.originalPositionFor({line:t.generatedLine-(r.generatedOffset.generatedLine-1),column:t.generatedColumn-(r.generatedOffset.generatedLine===t.generatedLine?r.generatedOffset.generatedColumn-1:0),bias:e.bias}):{source:null,line:null,column:null,name:null}},IndexedSourceMapConsumer.prototype.hasContentsOfAllSources=function(){return this._sections.every((function(e){return e.consumer.hasContentsOfAllSources()}))},IndexedSourceMapConsumer.prototype.sourceContentFor=function(e,t){for(var n=0;n<this._sections.length;n++){var r=this._sections[n].consumer.sourceContentFor(e,!0);if(r)return r}if(t)return null;throw new Error('"'+e+'" is not in the SourceMap.')},IndexedSourceMapConsumer.prototype.generatedPositionFor=function(e){for(var t=0;t<this._sections.length;t++){var n=this._sections[t];if(-1!==n.consumer.sources.indexOf(util.getArg(e,"source"))){var r=n.consumer.generatedPositionFor(e);if(r)return{line:r.line+(n.generatedOffset.generatedLine-1),column:r.column+(n.generatedOffset.generatedLine===r.line?n.generatedOffset.generatedColumn-1:0)}}}return{line:null,column:null}},IndexedSourceMapConsumer.prototype._parseMappings=function(e,t){this.__generatedMappings=[],this.__originalMappings=[];for(var n=0;n<this._sections.length;n++)for(var r=this._sections[n],i=r.consumer._generatedMappings,o=0;o<i.length;o++){var a=i[o],s=r.consumer._sources.at(a.source);null!==r.consumer.sourceRoot&&(s=util.join(r.consumer.sourceRoot,s)),this._sources.add(s),s=this._sources.indexOf(s);var l=r.consumer._names.at(a.name);this._names.add(l),l=this._names.indexOf(l);var u={source:s,generatedLine:a.generatedLine+(r.generatedOffset.generatedLine-1),generatedColumn:a.generatedColumn+(r.generatedOffset.generatedLine===a.generatedLine?r.generatedOffset.generatedColumn-1:0),originalLine:a.originalLine,originalColumn:a.originalColumn,name:l};this.__generatedMappings.push(u),"number"==typeof u.originalLine&&this.__originalMappings.push(u)}quickSort$1(this.__generatedMappings,util.compareByGeneratedPositionsDeflated),quickSort$1(this.__originalMappings,util.compareByOriginalPositions)};var IndexedSourceMapConsumer_1=IndexedSourceMapConsumer,sourceMapConsumer={SourceMapConsumer:SourceMapConsumer_1,BasicSourceMapConsumer:BasicSourceMapConsumer_1,IndexedSourceMapConsumer:IndexedSourceMapConsumer_1},stacktraceGps=createCommonjsModule((function(e,t){e.exports=function(e,t){function n(e){return new Promise((function(t,n){var r=new XMLHttpRequest;r.open("get",e),r.onerror=n,r.onreadystatechange=function(){4===r.readyState&&(r.status>=200&&r.status<300||"file://"===e.substr(0,7)&&r.responseText?t(r.responseText):n(new Error("HTTP status: "+r.status+" retrieving "+e)))},r.send()}))}function r(e){if("undefined"!=typeof window&&window.atob)return window.atob(e);throw new Error("You must supply a polyfill for window.atob in this environment")}function i(e){if("undefined"!=typeof JSON&&JSON.parse)return JSON.parse(e);throw new Error("You must supply a polyfill for JSON.parse in this environment")}function o(e,t){for(var n=[/['"]?([$_A-Za-z][$_A-Za-z0-9]*)['"]?\s*[:=]\s*function\b/,/function\s+([^('"`]*?)\s*\(([^)]*)\)/,/['"]?([$_A-Za-z][$_A-Za-z0-9]*)['"]?\s*[:=]\s*(?:eval|new Function)\b/,/\b(?!(?:if|for|switch|while|with|catch)\b)(?:(?:static)\s+)?(\S+)\s*\(.*?\)\s*\{/,/['"]?([$_A-Za-z][$_A-Za-z0-9]*)['"]?\s*[:=]\s*\(.*?\)\s*=>/],r=e.split("\n"),i="",o=Math.min(t,20),a=0;a<o;++a){var s=r[t-a-1],l=s.indexOf("//");if(l>=0&&(s=s.substr(0,l)),s){i=s+i;for(var u=n.length,c=0;c<u;c++){var p=n[c].exec(i);if(p&&p[1])return p[1]}}}}function a(){if("function"!=typeof Object.defineProperty||"function"!=typeof Object.create)throw new Error("Unable to consume source maps in older browsers")}function s(e){if("object"!=typeof e)throw new TypeError("Given StackFrame is not an object");if("string"!=typeof e.fileName)throw new TypeError("Given file name is not a String");if("number"!=typeof e.lineNumber||e.lineNumber%1!=0||e.lineNumber<1)throw new TypeError("Given line number must be a positive integer");if("number"!=typeof e.columnNumber||e.columnNumber%1!=0||e.columnNumber<0)throw new TypeError("Given column number must be a non-negative integer");return!0}function l(e){for(var t,n,r=/\/\/[#@] ?sourceMappingURL=([^\s'"]+)\s*$/gm;n=r.exec(e);)t=n[1];if(t)return t;throw new Error("sourceMappingURL not found")}function u(e,n,r){return new Promise((function(i,o){var a=n.originalPositionFor({line:e.lineNumber,column:e.columnNumber});if(a.source){var s=n.sourceContentFor(a.source);s&&(r[a.source]=s),i(new t({functionName:a.name||e.functionName,args:e.args,fileName:a.source,lineNumber:a.line,columnNumber:a.column}))}else o(new Error("Could not get original source for given stackframe and source map"))}))}return function c(p){if(!(this instanceof c))return new c(p);p=p||{},this.sourceCache=p.sourceCache||{},this.sourceMapConsumerCache=p.sourceMapConsumerCache||{},this.ajax=p.ajax||n,this._atob=p.atob||r,this._get=function(e){return new Promise(function(t,n){var r="data:"===e.substr(0,5);if(this.sourceCache[e])t(this.sourceCache[e]);else if(p.offline&&!r)n(new Error("Cannot make network requests in offline mode"));else if(r){var i=/^data:application\/json;([\w=:"-]+;)*base64,/,o=e.match(i);if(o){var a=o[0].length,s=e.substr(a),l=this._atob(s);this.sourceCache[e]=l,t(l)}else n(new Error("The encoding of the inline sourcemap is not supported"))}else{var u=this.ajax(e,{method:"get"});this.sourceCache[e]=u,u.then(t,n)}}.bind(this))},this._getSourceMapConsumer=function(t,n){return new Promise(function(r,o){if(this.sourceMapConsumerCache[t])r(this.sourceMapConsumerCache[t]);else{var a=new Promise(function(r,o){return this._get(t).then((function(t){"string"==typeof t&&(t=i(t.replace(/^\)\]\}'/,""))),void 0===t.sourceRoot&&(t.sourceRoot=n),r(new e.SourceMapConsumer(t))}),o)}.bind(this));this.sourceMapConsumerCache[t]=a,r(a)}}.bind(this))},this.pinpoint=function(e){return new Promise(function(t,n){this.getMappedLocation(e).then(function(e){function n(){t(e)}this.findFunctionName(e).then(t,n).catch(n)}.bind(this),n)}.bind(this))},this.findFunctionName=function(e){return new Promise(function(n,r){s(e),this._get(e.fileName).then((function(r){var i=e.lineNumber,a=e.columnNumber,s=o(r,i,a);n(s?new t({functionName:s,args:e.args,fileName:e.fileName,lineNumber:i,columnNumber:a}):e)}),r).catch(r)}.bind(this))},this.getMappedLocation=function(e){return new Promise(function(t,n){a(),s(e);var r=this.sourceCache,i=e.fileName;this._get(i).then(function(n){var o=l(n),a="data:"===o.substr(0,5),s=i.substring(0,i.lastIndexOf("/")+1);return"/"===o[0]||a||/^https?:\/\/|^\/\//i.test(o)||(o=s+o),this._getSourceMapConsumer(o,s).then((function(n){return u(e,n,r).then(t).catch((function(){t(e)}))}))}.bind(this),n).catch(n)}.bind(this))}}}(sourceMapConsumer,stackframe)})),stacktrace=createCommonjsModule((function(e,t){e.exports=function(e,t,n){var r={filter:function(e){return-1===(e.functionName||"").indexOf("StackTrace$$")&&-1===(e.functionName||"").indexOf("ErrorStackParser$$")&&-1===(e.functionName||"").indexOf("StackTraceGPS$$")&&-1===(e.functionName||"").indexOf("StackGenerator$$")},sourceCache:{}},i=function(){try{throw new Error}catch(e){return e}};function o(e,t){var n={};return[e,t].forEach((function(e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t]);return n})),n}function a(e){return e.stack||e["opera#sourceloc"]}function s(e,t){return"function"==typeof t?e.filter(t):e}return{get:function(e){var t=i();return a(t)?this.fromError(t,e):this.generateArtificially(e)},getSync:function(n){n=o(r,n);var l=i();return s(a(l)?e.parse(l):t.backtrace(n),n.filter)},fromError:function(t,i){i=o(r,i);var a=new n(i);return new Promise(function(n){var r=s(e.parse(t),i.filter);n(Promise.all(r.map((function(e){return new Promise((function(t){function n(){t(e)}a.pinpoint(e).then(t,n).catch(n)}))}))))}.bind(this))},generateArtificially:function(e){e=o(r,e);var n=t.backtrace(e);return"function"==typeof e.filter&&(n=n.filter(e.filter)),Promise.resolve(n)},instrument:function(e,t,n,r){if("function"!=typeof e)throw new Error("Cannot instrument non-function object");if("function"==typeof e.__stacktraceOriginalFn)return e;var i=function(){try{return this.get().then(t,n).catch(n),e.apply(r||this,arguments)}catch(e){throw a(e)&&this.fromError(e).then(t,n).catch(n),e}}.bind(this);return i.__stacktraceOriginalFn=e,i},deinstrument:function(e){if("function"!=typeof e)throw new Error("Cannot de-instrument non-function object");return"function"==typeof e.__stacktraceOriginalFn?e.__stacktraceOriginalFn:e},report:function(e,t,n,r){return new Promise((function(i,o){var a=new XMLHttpRequest;if(a.onerror=o,a.onreadystatechange=function(){4===a.readyState&&(a.status>=200&&a.status<400?i(a.responseText):o(new Error("POST to "+t+" failed with status: "+a.status)))},a.open("post",t),a.setRequestHeader("Content-Type","application/json"),r&&"object"==typeof r.headers){var s=r.headers;for(var l in s)s.hasOwnProperty(l)&&a.setRequestHeader(l,s[l])}var u={stack:e};null!=n&&(u.message=n),a.send(JSON.stringify(u))}))}}}(errorStackParser,stackGenerator,stacktraceGps)}));function Call(e,t){return __awaiter(this,void 0,void 0,(function*(){const n=yield call(e,t);for(let e of n.outputFiles)e.blob=new Blob([e.buffer]);return n.outputFiles}))}function call(e,t){const n={files:e,args:t,requestNumber:magickWorkerPromisesKey},r=CreatePromiseEvent();return magickWorkerPromises[magickWorkerPromisesKey]=r,magickWorker.postMessage(n),magickWorkerPromisesKey++,console.log("magickWorkerPromisesKey",magickWorkerPromisesKey),r}function CreatePromiseEvent(){let e,t;const n=new Promise(((n,r)=>{e=n,t=r}));return n.resolve=e,n.reject=t,n}function ChangeUrl(e,t){let n=e.split("/");return n[n.length-1]=t,n.join("/")}function GetCurrentUrlDifferentFilename(e,t){return ChangeUrl(e,t)}let currentJavascriptURL="./magickApi.js";function GenerateStackAndGetPathAtDepth(e){try{let t=stacktrace.getSync()[e].fileName;if(void 0!==t&&-1===t.indexOf("/")&&-1===t.indexOf("\\"))return;return t}catch(e){return}}function GetCurrentFileURLHelper3(){let e=GenerateStackAndGetPathAtDepth(0);return void 0===e&&(e=GenerateStackAndGetPathAtDepth(2)),void 0===e&&(e="./magickApi.js"),e}function GetCurrentFileURLHelper2(){return GetCurrentFileURLHelper3()}function GetCurrentFileURLHelper1(){return GetCurrentFileURLHelper2()}function GetCurrentFileURL(){return GetCurrentFileURLHelper1()}currentJavascriptURL=GetCurrentFileURL();const magickWorkerUrl=window.CACHE_LIST["magick.js"];function GenerateMagickWorkerText(e){return"var magickJsCurrentPath = '"+e+"';\nimportScripts(magickJsCurrentPath);"}let magickWorker;magickWorker=currentJavascriptURL.startsWith("http")?new Worker(window.URL.createObjectURL(new Blob([GenerateMagickWorkerText(magickWorkerUrl)]))):new Worker(magickWorkerUrl);const magickWorkerPromises={};let magickWorkerPromisesKey=1;var IMAlign,IMAlpha,IMAutoThreshold,IMBoolean,IMCache,IMChannel,IMClass,IMClipPath,IMColorspace,IMCommand,IMCompliance,IMComplex,IMCompose,IMCompress,IMDataType,IMDebug,IMDecoration,IMDirection,IMDispose,IMDistort,IMDither,IMEndian,IMEvaluate,IMFillRule,IMFilter,IMFunction,IMGradient,IMGravity,IMIntensity,IMIntent,IMInterlace,IMInterpolate,IMKernel,IMLayers,IMLineCap,IMLineJoin,IMList,IMLogEvent,IMLog,IMMethod,IMMetric,IMMode,IMMorphology,IMModule,IMNoise,IMOrientation,IMPixelChannel,IMPixelIntensity,IMPixelMask,IMPixelTrait,IMPolicyDomain,IMPolicyRights,IMPreview,IMPrimitive,IMQuantumFormat,IMSparseColor,IMStatistic,IMStorage,IMStretch,IMStyle,IMTool,IMType,IMUnits,IMValidate,IMVirtualPixel,IMWeight;magickWorker.onmessage=e=>{const t=e.data,n=magickWorkerPromises[t.requestNumber];delete magickWorkerPromises[t.requestNumber];const r={outputFiles:t.outputFiles,stdout:t.stdout,stderr:t.stderr,exitCode:t.exitCode||0};n.resolve(r)},function(e){e.Center="Center",e.End="End",e.Left="Left",e.Middle="Middle",e.Right="Right",e.Start="Start"}(IMAlign||(IMAlign={})),function(e){e.Activate="Activate",e.Associate="Associate",e.Background="Background",e.Copy="Copy",e.Deactivate="Deactivate",e.Discrete="Discrete",e.Disassociate="Disassociate",e.Extract="Extract",e.Off="Off",e.On="On",e.Opaque="Opaque",e.Remove="Remove",e.Set="Set",e.Shape="Shape",e.Transparent="Transparent"}(IMAlpha||(IMAlpha={})),function(e){e.Kapur="Kapur",e.OTSU="OTSU",e.Triangle="Triangle"}(IMAutoThreshold||(IMAutoThreshold={})),function(e){e.False="False",e.True="True",e["0_"]="0",e["1_"]="1"}(IMBoolean||(IMBoolean={})),function(e){e.Disk="Disk",e.Distributed="Distributed",e.Map="Map",e.Memory="Memory",e.Ping="Ping"}(IMCache||(IMCache={})),function(e){e.All="All",e.Sync="Sync",e.Default="Default",e.A="A",e.Alpha="Alpha",e.Black="Black",e.B="B",e.Blue="Blue",e.C="C",e.Chroma="Chroma",e.Cyan="Cyan",e.Gray="Gray",e.G="G",e.Green="Green",e.H="H",e.Hue="Hue",e.K="K",e.L="L",e.Lightness="Lightness",e.Luminance="Luminance",e.M="M",e.Magenta="Magenta",e.Meta="Meta",e.R="R",e.Red="Red",e.S="S",e.Saturation="Saturation",e.Y="Y",e.Yellow="Yellow",e["0_"]="0",e["1_"]="1",e["2_"]="2",e["3_"]="3",e["4_"]="4",e["5_"]="5",e["6_"]="6",e["7_"]="7",e["8_"]="8",e["9_"]="9",e["10_"]="10",e["11_"]="11",e["12_"]="12",e["13_"]="13",e["14_"]="14",e["15_"]="15",e["16_"]="16",e["17_"]="17",e["18_"]="18",e["19_"]="19",e["20_"]="20",e["21_"]="21",e["22_"]="22",e["23_"]="23",e["24_"]="24",e["25_"]="25",e["26_"]="26",e["27_"]="27",e["28_"]="28",e["29_"]="29",e["30_"]="30",e["31_"]="31"}(IMChannel||(IMChannel={})),function(e){e.DirectClass="DirectClass",e.PseudoClass="PseudoClass"}(IMClass||(IMClass={})),function(e){e.ObjectBoundingBox="ObjectBoundingBox",e.UserSpace="UserSpace",e.UserSpaceOnUse="UserSpaceOnUse"}(IMClipPath||(IMClipPath={})),function(e){e.CIELab="CIELab",e.CMY="CMY",e.CMYK="CMYK",e.Gray="Gray",e.HCL="HCL",e.HCLp="HCLp",e.HSB="HSB",e.HSI="HSI",e.HSL="HSL",e.HSV="HSV",e.HWB="HWB",e.Lab="Lab",e.LCH="LCH",e.LCHab="LCHab",e.LCHuv="LCHuv",e.LinearGray="LinearGray",e.LMS="LMS",e.Log="Log",e.Luv="Luv",e.OHTA="OHTA",e.Rec601YCbCr="Rec601YCbCr",e.Rec709YCbCr="Rec709YCbCr",e.RGB="RGB",e.scRGB="scRGB",e.sRGB="sRGB",e.Transparent="Transparent",e.xyY="xyY",e.XYZ="XYZ",e.YCbCr="YCbCr",e.YDbDr="YDbDr",e.YCC="YCC",e.YIQ="YIQ",e.YPbPr="YPbPr",e.YUV="YUV"}(IMColorspace||(IMColorspace={})),function(e){e["-alpha"]="-alpha",e["+background"]="+background",e["-background"]="-background",e["+format"]="+format",e["-format"]="-format",e["-quiet"]="-quiet",e["+quiet"]="+quiet",e["-regard-warnings"]="-regard-warnings",e["+regard-warnings"]="+regard-warnings",e["+repage"]="+repage",e["-repage"]="-repage",e["+size"]="+size",e["-size"]="-size",e["+virtual-pixel"]="+virtual-pixel",e["-virtual-pixel"]="-virtual-pixel",e["-blur"]="-blur",e["-resize"]="-resize",e["-adaptive-blur"]="-adaptive-blur",e["-adaptive-resize"]="-adaptive-resize",e["-adaptive-sharpen"]="-adaptive-sharpen",e["-adjoin"]="-adjoin",e["+adjoin"]="+adjoin",e["+mattecolor"]="+mattecolor",e["-mattecolor"]="-mattecolor",e["-annotate"]="-annotate",e["-antialias"]="-antialias",e["+antialias"]="+antialias",e["-append"]="-append",e["+append"]="+append",e["+attenuate"]="+attenuate",e["-attenuate"]="-attenuate",e["+authenticate"]="+authenticate",e["-authenticate"]="-authenticate",e["-auto-gamma"]="-auto-gamma",e["-auto-level"]="-auto-level",e["-auto-orient"]="-auto-orient",e["-auto-threshold"]="-auto-threshold",e["+backdrop"]="+backdrop",e["-backdrop"]="-backdrop",e["-bench"]="-bench",e["+bias"]="+bias",e["-bias"]="-bias",e["-black-point-compensation"]="-black-point-compensation",e["+black-point-compensation"]="+black-point-compensation",e["-black-threshold"]="-black-threshold",e["+blend"]="+blend",e["-blend"]="-blend",e["+blue-primary"]="+blue-primary",e["-blue-primary"]="-blue-primary",e["-blue-shift"]="-blue-shift",e["+blue-shift"]="+blue-shift",e["-border"]="-border",e["+bordercolor"]="+bordercolor",e["-bordercolor"]="-bordercolor",e["+borderwidth"]="+borderwidth",e["-borderwidth"]="-borderwidth",e["-brightness-contrast"]="-brightness-contrast",e["+cache"]="+cache",e["-cache"]="-cache",e["+caption"]="+caption",e["-caption"]="-caption",e["-cdl"]="-cdl",e["+channel"]="+channel",e["-channel"]="-channel",e["-channel-fx"]="-channel-fx",e["-charcoal"]="-charcoal",e["-chop"]="-chop",e["-clamp"]="-clamp",e["-clip"]="-clip",e["+clip"]="+clip",e["+clip-mask"]="+clip-mask",e["-clip-mask"]="-clip-mask",e["-clip-path"]="-clip-path",e["+clip-path"]="+clip-path",e["+clone"]="+clone",e["-clone"]="-clone",e["-clut"]="-clut",e["-coalesce"]="-coalesce",e["-colorize"]="-colorize",e["+colormap"]="+colormap",e["-colormap"]="-colormap",e["-color-matrix"]="-color-matrix",e["-colors"]="-colors",e["+colorspace"]="+colorspace",e["-colorspace"]="-colorspace",e["-combine"]="-combine",e["+combine"]="+combine",e["+comment"]="+comment",e["-comment"]="-comment",e["-compare"]="-compare",e["-complex"]="-complex",e["+compose"]="+compose",e["-compose"]="-compose",e["-composite"]="-composite",e["+compress"]="+compress",e["-compress"]="-compress",e["-concurrent"]="-concurrent",e["-connected-components"]="-connected-components",e["-contrast-stretch"]="-contrast-stretch",e["-convolve"]="-convolve",e["-copy"]="-copy",e["-crop"]="-crop",e["-cycle"]="-cycle",e["+debug"]="+debug",e["-debug"]="-debug",e["-decipher"]="-decipher",e["-define"]="-define",e["+define"]="+define",e["+delay"]="+delay",e["-delay"]="-delay",e["+delete"]="+delete",e["-delete"]="-delete",e["+density"]="+density",e["-density"]="-density",e["+depth"]="+depth",e["-depth"]="-depth",e["+descend"]="+descend",e["-descend"]="-descend",e["+deskew"]="+deskew",e["-deskew"]="-deskew",e["-despeckle"]="-despeckle",e["+direction"]="+direction",e["-direction"]="-direction",e["+displace"]="+displace",e["-displace"]="-displace",e["-display"]="-display",e["+display"]="+display",e["+dispose"]="+dispose",e["-dispose"]="-dispose",e["+dissimilarity-threshold"]="+dissimilarity-threshold",e["-dissimilarity-threshold"]="-dissimilarity-threshold",e["+dissolve"]="+dissolve",e["-dissolve"]="-dissolve",e["-distort"]="-distort",e["+distort"]="+distort",e["+dither"]="+dither",e["-dither"]="-dither",e["-draw"]="-draw",e["+duplicate"]="+duplicate",e["-duplicate"]="-duplicate",e["-duration"]="-duration",e["+duration"]="+duration",e["-edge"]="-edge",e["-emboss"]="-emboss",e["-encipher"]="-encipher",e["+encoding"]="+encoding",e["-encoding"]="-encoding",e["+endian"]="+endian",e["-endian"]="-endian",e["-enhance"]="-enhance",e["-equalize"]="-equalize",e["-evaluate"]="-evaluate",e["-evaluate-sequence"]="-evaluate-sequence",e["-exit"]="-exit",e["-extent"]="-extent",e["+extract"]="+extract",e["-extract"]="-extract",e["-family"]="-family",e["+features"]="+features",e["-features"]="-features",e["-fft"]="-fft",e["+fft"]="+fft",e["+fill"]="+fill",e["-fill"]="-fill",e["+filter"]="+filter",e["-filter"]="-filter",e["-flatten"]="-flatten",e["-flip"]="-flip",e["-floodfill"]="-floodfill",e["+floodfill"]="+floodfill",e["-flop"]="-flop",e["+font"]="+font",e["-font"]="-font",e["+foreground"]="+foreground",e["-foreground"]="-foreground",e["-frame"]="-frame",e["-function"]="-function",e["+fuzz"]="+fuzz",e["-fuzz"]="-fuzz",e["-fx"]="-fx",e["-gamma"]="-gamma",e["+gamma"]="+gamma",e["-gaussian-blur"]="-gaussian-blur",e["+geometry"]="+geometry",e["-geometry"]="-geometry",e["+gravity"]="+gravity",e["-gravity"]="-gravity",e["-grayscale"]="-grayscale",e["+green-primary"]="+green-primary",e["-green-primary"]="-green-primary",e["-hald-clut"]="-hald-clut",e["+highlight-color"]="+highlight-color",e["-highlight-color"]="-highlight-color",e["+iconGeometry"]="+iconGeometry",e["-iconGeometry"]="-iconGeometry",e["-iconic"]="-iconic",e["+iconic"]="+iconic",e["-identify"]="-identify",e["-ift"]="-ift",e["+ift"]="+ift",e["-immutable"]="-immutable",e["+immutable"]="+immutable",e["-implode"]="-implode",e["+insert"]="+insert",e["-insert"]="-insert",e["+intensity"]="+intensity",e["-intensity"]="-intensity",e["+intent"]="+intent",e["-intent"]="-intent",e["+interlace"]="+interlace",e["-interlace"]="-interlace",e["+interline-spacing"]="+interline-spacing",e["-interline-spacing"]="-interline-spacing",e["+interpolate"]="+interpolate",e["-interpolate"]="-interpolate",e["-interpolative-resize"]="-interpolative-resize",e["+interword-spacing"]="+interword-spacing",e["-interword-spacing"]="-interword-spacing",e["+kerning"]="+kerning",e["-kerning"]="-kerning",e["-kuwahara"]="-kuwahara",e["+label"]="+label",e["-label"]="-label",e["-lat"]="-lat",e["-layers"]="-layers",e["-level"]="-level",e["+level"]="+level",e["-level-colors"]="-level-colors",e["+level-colors"]="+level-colors",e["-limit"]="-limit",e["-linear-stretch"]="-linear-stretch",e["-liquid-rescale"]="-liquid-rescale",e["-list"]="-list",e["-local-contrast"]="-local-contrast",e["+log"]="+log",e["-log"]="-log",e["+loop"]="+loop",e["-loop"]="-loop",e["+lowlight-color"]="+lowlight-color",e["-lowlight-color"]="-lowlight-color",e["-magnify"]="-magnify",e["+mask"]="+mask",e["-mask"]="-mask",e["+metric"]="+metric",e["-metric"]="-metric",e["+mode"]="+mode",e["-modulate"]="-modulate",e["-moments"]="-moments",e["+moments"]="+moments",e["-monitor"]="-monitor",e["+monitor"]="+monitor",e["+monochrome"]="+monochrome",e["-monochrome"]="-monochrome",e["-morph"]="-morph",e["-morphology"]="-morphology",e["-mosaic"]="-mosaic",e["-motion-blur"]="-motion-blur",e["+name"]="+name",e["-name"]="-name",e["+negate"]="+negate",e["-negate"]="-negate",e["-noise"]="-noise",e["+noise"]="+noise",e["-noop"]="-noop",e["-normalize"]="-normalize",e["-opaque"]="-opaque",e["+opaque"]="+opaque",e["-ordered-dither"]="-ordered-dither",e["+orient"]="+orient",e["-orient"]="-orient",e["+page"]="+page",e["-page"]="-page",e["-paint"]="-paint",e["+path"]="+path",e["-path"]="-path",e["+pause"]="+pause",e["-pause"]="-pause",e["-ping"]="-ping",e["+ping"]="+ping",e["+pointsize"]="+pointsize",e["-pointsize"]="-pointsize",e["+polaroid"]="+polaroid",e["-polaroid"]="-polaroid",e["-poly"]="-poly",e["-posterize"]="-posterize",e["+precision"]="+precision",e["-precision"]="-precision",e["-preview"]="-preview",e["-print"]="-print",e["-process"]="-process",e["+profile"]="+profile",e["-profile"]="-profile",e["+quality"]="+quality",e["-quality"]="-quality",e["+quantize"]="+quantize",e["-quantize"]="-quantize",e["-raise"]="-raise",e["+raise"]="+raise",e["-random-threshold"]="-random-threshold",e["-range-threshold"]="-range-threshold",e["-read"]="-read",e["+read-mask"]="+read-mask",e["-read-mask"]="-read-mask",e["+red-primary"]="+red-primary",e["-red-primary"]="-red-primary",e["+region"]="+region",e["-region"]="-region",e["+remap"]="+remap",e["-remap"]="-remap",e["+remote"]="+remote",e["-remote"]="-remote",e["-render"]="-render",e["+render"]="+render",e["-resample"]="-resample",e["-respect-parenthesis"]="-respect-parenthesis",e["+respect-parenthesis"]="+respect-parenthesis",e["-reverse"]="-reverse",e["-roll"]="-roll",e["-rotate"]="-rotate",e["-rotational-blur"]="-rotational-blur",e["-sample"]="-sample",e["+sampling-factor"]="+sampling-factor",e["-sampling-factor"]="-sampling-factor",e["-scale"]="-scale",e["+scene"]="+scene",e["-scene"]="-scene",e["+scenes"]="+scenes",e["-scenes"]="-scenes",e["+screen"]="+screen",e["-screen"]="-screen",e["-script"]="-script",e["+seed"]="+seed",e["-seed"]="-seed",e["-segment"]="-segment",e["-selective-blur"]="-selective-blur",e["-separate"]="-separate",e["-sepia-tone"]="-sepia-tone",e["+set"]="+set",e["-set"]="-set",e["-shade"]="-shade",e["-shadow"]="-shadow",e["+shared-memory"]="+shared-memory",e["-shared-memory"]="-shared-memory",e["-sharpen"]="-sharpen",e["-shave"]="-shave",e["-shear"]="-shear",e["-sigmoidal-contrast"]="-sigmoidal-contrast",e["+sigmoidal-contrast"]="+sigmoidal-contrast",e["+silent"]="+silent",e["-silent"]="-silent",e["+similarity-threshold"]="+similarity-threshold",e["-similarity-threshold"]="-similarity-threshold",e["-sketch"]="-sketch",e["-smush"]="-smush",e["+smush"]="+smush",e["+snaps"]="+snaps",e["-snaps"]="-snaps",e["-solarize"]="-solarize",e["-sparse-color"]="-sparse-color",e["-splice"]="-splice",e["-spread"]="-spread",e["-statistic"]="-statistic",e["+stegano"]="+stegano",e["-stegano"]="-stegano",e["-stereo"]="-stereo",e["-stretch"]="-stretch",e["-strip"]="-strip",e["+stroke"]="+stroke",e["-stroke"]="-stroke",e["-strokewidth"]="-strokewidth",e["+strokewidth"]="+strokewidth",e["+style"]="+style",e["-style"]="-style",e["-subimage"]="-subimage",e["-subimage-search"]="-subimage-search",e["+subimage-search"]="+subimage-search",e["+swap"]="+swap",e["-swap"]="-swap",e["-swirl"]="-swirl",e["-synchronize"]="-synchronize",e["+synchronize"]="+synchronize",e["-taint"]="-taint",e["+taint"]="+taint",e["+text-font"]="+text-font",e["-text-font"]="-text-font",e["+texture"]="+texture",e["-texture"]="-texture",e["+threshold"]="+threshold",e["-threshold"]="-threshold",e["-thumbnail"]="-thumbnail",e["+tile"]="+tile",e["-tile"]="-tile",e["+tile-offset"]="+tile-offset",e["-tile-offset"]="-tile-offset",e["-tint"]="-tint",e["+tint"]="+tint",e["+title"]="+title",e["-title"]="-title",e["-transparent"]="-transparent",e["+transparent"]="+transparent",e["+transparent-color"]="+transparent-color",e["-transparent-color"]="-transparent-color",e["-transpose"]="-transpose",e["-transverse"]="-transverse",e["-treedepth"]="-treedepth",e["-trim"]="-trim",e["+type"]="+type",e["-type"]="-type",e["+undercolor"]="+undercolor",e["-undercolor"]="-undercolor",e["-unique"]="-unique",e["+unique"]="+unique",e["-unique-colors"]="-unique-colors",e["+units"]="+units",e["-units"]="-units",e["-unsharp"]="-unsharp",e["+update"]="+update",e["-update"]="-update",e["+use-pixmap"]="+use-pixmap",e["-use-pixmap"]="-use-pixmap",e["-verbose"]="-verbose",e["+verbose"]="+verbose",e["-version"]="-version",e["+view"]="+view",e["-view"]="-view",e["-vignette"]="-vignette",e["+visual"]="+visual",e["-visual"]="-visual",e["+watermark"]="+watermark",e["-watermark"]="-watermark",e["-wave"]="-wave",e["-wavelet-denoise"]="-wavelet-denoise",e["-weight"]="-weight",e["+white-point"]="+white-point",e["-white-point"]="-white-point",e["-white-threshold"]="-white-threshold",e["+window"]="+window",e["-window"]="-window",e["+window-group"]="+window-group",e["-window-group"]="-window-group",e["-write"]="-write",e["+write"]="+write",e["+write-mask"]="+write-mask",e["-write-mask"]="-write-mask"}(IMCommand||(IMCommand={})),function(e){e.CSS="CSS",e.MVG="MVG",e.No="No",e.SVG="SVG",e.X11="X11",e.XPM="XPM"}(IMCompliance||(IMCompliance={})),function(e){e.Add="Add",e.Conjugate="Conjugate",e.Divide="Divide",e.MagnitudePhase="MagnitudePhase",e.Multiply="Multiply",e.RealImaginary="RealImaginary",e.Subtract="Subtract"}(IMComplex||(IMComplex={})),function(e){e.Atop="Atop",e.Blend="Blend",e.Blur="Blur",e.Bumpmap="Bumpmap",e.ChangeMask="ChangeMask",e.Clear="Clear",e.ColorBurn="ColorBurn",e.ColorDodge="ColorDodge",e.Colorize="Colorize",e.CopyAlpha="CopyAlpha",e.CopyBlack="CopyBlack",e.CopyBlue="CopyBlue",e.CopyCyan="CopyCyan",e.CopyGreen="CopyGreen",e.Copy="Copy",e.CopyMagenta="CopyMagenta",e.CopyRed="CopyRed",e.CopyYellow="CopyYellow",e.Darken="Darken",e.DarkenIntensity="DarkenIntensity",e.DivideDst="DivideDst",e.DivideSrc="DivideSrc",e.Dst="Dst",e.Difference="Difference",e.Displace="Displace",e.Dissolve="Dissolve",e.Distort="Distort",e.DstAtop="DstAtop",e.DstIn="DstIn",e.DstOut="DstOut",e.DstOver="DstOver",e.Exclusion="Exclusion",e.HardLight="HardLight",e.HardMix="HardMix",e.Hue="Hue",e.In="In",e.Intensity="Intensity",e.Lighten="Lighten",e.LightenIntensity="LightenIntensity",e.LinearBurn="LinearBurn",e.LinearDodge="LinearDodge",e.LinearLight="LinearLight",e.Luminize="Luminize",e.Mathematics="Mathematics",e.MinusDst="MinusDst",e.MinusSrc="MinusSrc",e.Modulate="Modulate",e.ModulusAdd="ModulusAdd",e.ModulusSubtract="ModulusSubtract",e.Multiply="Multiply",e.None="None",e.Out="Out",e.Overlay="Overlay",e.Over="Over",e.PegtopLight="PegtopLight",e.PinLight="PinLight",e.Plus="Plus",e.Replace="Replace",e.Saturate="Saturate",e.Screen="Screen",e.SoftLight="SoftLight",e.Src="Src",e.SrcAtop="SrcAtop",e.SrcIn="SrcIn",e.SrcOut="SrcOut",e.SrcOver="SrcOver",e.Stereo="Stereo",e.VividLight="VividLight",e.Xor="Xor"}(IMCompose||(IMCompose={})),function(e){e.B44A="B44A",e.B44="B44",e.BZip="BZip",e.DXT1="DXT1",e.DXT3="DXT3",e.DXT5="DXT5",e.Fax="Fax",e.Group4="Group4",e.JBIG1="JBIG1",e.JBIG2="JBIG2",e.JPEG2000="JPEG2000",e.JPEG="JPEG",e.LosslessJPEG="LosslessJPEG",e.Lossless="Lossless",e.LZMA="LZMA",e.LZW="LZW",e.None="None",e.Piz="Piz",e.Pxr24="Pxr24",e.RLE="RLE",e.RunlengthEncoded="RunlengthEncoded",e.WebP="WebP",e.ZipS="ZipS",e.Zip="Zip",e.Zstd="Zstd"}(IMCompress||(IMCompress={})),function(e){e.Byte="Byte",e.Long="Long",e.Short="Short",e.String="String"}(IMDataType||(IMDataType={})),function(e){e.All="All",e.Accelerate="Accelerate",e.Annotate="Annotate",e.Blob="Blob",e.Cache="Cache",e.Coder="Coder",e.Command="Command",e.Configure="Configure",e.Deprecate="Deprecate",e.Draw="Draw",e.Exception="Exception",e.Locale="Locale",e.Module="Module",e.None="None",e.Pixel="Pixel",e.Policy="Policy",e.Resource="Resource",e.Trace="Trace",e.Transform="Transform",e.User="User",e.Wand="Wand",e.X11="X11"}(IMDebug||(IMDebug={})),function(e){e.LineThrough="LineThrough",e.None="None",e.Overline="Overline",e.Underline="Underline"}(IMDecoration||(IMDecoration={})),function(e){e["right-to-left"]="right-to-left",e["left-to-right"]="left-to-right"}(IMDirection||(IMDirection={})),function(e){e.Undefined="Undefined",e.Background="Background",e.None="None",e.Previous="Previous",e["0_"]="0",e["1_"]="1",e["2_"]="2",e["3_"]="3"}(IMDispose||(IMDispose={})),function(e){e.Affine="Affine",e.AffineProjection="AffineProjection",e.ScaleRotateTranslate="ScaleRotateTranslate",e.SRT="SRT",e.Perspective="Perspective",e.PerspectiveProjection="PerspectiveProjection",e.BilinearForward="BilinearForward",e.BilinearReverse="BilinearReverse",e.Polynomial="Polynomial",e.Arc="Arc",e.Polar="Polar",e.DePolar="DePolar",e.Barrel="Barrel",e.BarrelInverse="BarrelInverse",e.Shepards="Shepards",e.Resize="Resize"}(IMDistort||(IMDistort={})),function(e){e.None="None",e.FloydSteinberg="FloydSteinberg",e.Riemersma="Riemersma"}(IMDither||(IMDither={})),function(e){e.LSB="LSB",e.MSB="MSB"}(IMEndian||(IMEndian={})),function(e){e.Abs="Abs",e.Add="Add",e.AddModulus="AddModulus",e.And="And",e.Cos="Cos",e.Cosine="Cosine",e.Divide="Divide",e.Exp="Exp",e.Exponential="Exponential",e.GaussianNoise="GaussianNoise",e.ImpulseNoise="ImpulseNoise",e.LaplacianNoise="LaplacianNoise",e.LeftShift="LeftShift",e.Log="Log",e.Max="Max",e.Mean="Mean",e.Median="Median",e.Min="Min",e.MultiplicativeNoise="MultiplicativeNoise",e.Multiply="Multiply",e.Or="Or",e.PoissonNoise="PoissonNoise",e.Pow="Pow",e.RightShift="RightShift",e.RMS="RMS",e.RootMeanSquare="RootMeanSquare",e.Set="Set",e.Sin="Sin",e.Sine="Sine",e.Subtract="Subtract",e.Sum="Sum",e.Threshold="Threshold",e.ThresholdBlack="ThresholdBlack",e.ThresholdWhite="ThresholdWhite",e.UniformNoise="UniformNoise",e.Xor="Xor"}(IMEvaluate||(IMEvaluate={})),function(e){e.Evenodd="Evenodd",e.NonZero="NonZero"}(IMFillRule||(IMFillRule={})),function(e){e.Bartlett="Bartlett",e.Blackman="Blackman",e.Bohman="Bohman",e.Box="Box",e.Catrom="Catrom",e.Cosine="Cosine",e.Cubic="Cubic",e.Gaussian="Gaussian",e.Hamming="Hamming",e.Hann="Hann",e.Hermite="Hermite",e.Jinc="Jinc",e.Kaiser="Kaiser",e.Lagrange="Lagrange",e.Lanczos="Lanczos",e.Lanczos2="Lanczos2",e.Lanczos2Sharp="Lanczos2Sharp",e.LanczosRadius="LanczosRadius",e.LanczosSharp="LanczosSharp",e.Mitchell="Mitchell",e.Parzen="Parzen",e.Point="Point",e.Quadratic="Quadratic",e.Robidoux="Robidoux",e.RobidouxSharp="RobidouxSharp",e.Sinc="Sinc",e.SincFast="SincFast",e.Spline="Spline",e.CubicSpline="CubicSpline",e.Triangle="Triangle",e.Welch="Welch"}(IMFilter||(IMFilter={})),function(e){e.Polynomial="Polynomial",e.Sinusoid="Sinusoid",e.ArcSin="ArcSin",e.ArcTan="ArcTan"}(IMFunction||(IMFunction={})),function(e){e.Linear="Linear",e.Radial="Radial"}(IMGradient||(IMGradient={})),function(e){e.None="None",e.Center="Center",e.East="East",e.Forget="Forget",e.NorthEast="NorthEast",e.North="North",e.NorthWest="NorthWest",e.SouthEast="SouthEast",e.South="South",e.SouthWest="SouthWest",e.West="West"}(IMGravity||(IMGravity={})),function(e){e.Average="Average",e.Brightness="Brightness",e.Lightness="Lightness",e.Mean="Mean",e.MS="MS",e.Rec601Luma="Rec601Luma",e.Rec601Luminance="Rec601Luminance",e.Rec709Luma="Rec709Luma",e.Rec709Luminance="Rec709Luminance",e.RMS="RMS"}(IMIntensity||(IMIntensity={})),function(e){e.Absolute="Absolute",e.Perceptual="Perceptual",e.Relative="Relative",e.Saturation="Saturation"}(IMIntent||(IMIntent={})),function(e){e.Line="Line",e.None="None",e.Plane="Plane",e.Partition="Partition",e.GIF="GIF",e.JPEG="JPEG",e.PNG="PNG"}(IMInterlace||(IMInterlace={})),function(e){e.Average="Average",e.Average4="Average4",e.Average9="Average9",e.Average16="Average16",e.Background="Background",e.Bilinear="Bilinear",e.Blend="Blend",e.Catrom="Catrom",e.Integer="Integer",e.Mesh="Mesh",e.Nearest="Nearest",e.Spline="Spline"}(IMInterpolate||(IMInterpolate={})),function(e){e.Unity="Unity",e.Gaussian="Gaussian",e.DoG="DoG",e.LoG="LoG",e.Blur="Blur",e.Comet="Comet",e.Binomial="Binomial",e.Laplacian="Laplacian",e.Sobel="Sobel",e.FreiChen="FreiChen",e.Roberts="Roberts",e.Prewitt="Prewitt",e.Compass="Compass",e.Kirsch="Kirsch",e.Diamond="Diamond",e.Square="Square",e.Rectangle="Rectangle",e.Disk="Disk",e.Octagon="Octagon",e.Plus="Plus",e.Cross="Cross",e.Ring="Ring",e.Peaks="Peaks",e.Edges="Edges",e.Corners="Corners",e.Diagonals="Diagonals",e.LineEnds="LineEnds",e.LineJunctions="LineJunctions",e.Ridges="Ridges",e.ConvexHull="ConvexHull",e.ThinSe="ThinSe",e.Skeleton="Skeleton",e.Chebyshev="Chebyshev",e.Manhattan="Manhattan",e.Octagonal="Octagonal",e.Euclidean="Euclidean"}(IMKernel||(IMKernel={})),function(e){e.Coalesce="Coalesce",e.CompareAny="CompareAny",e.CompareClear="CompareClear",e.CompareOverlay="CompareOverlay",e.Dispose="Dispose",e.Optimize="Optimize",e.OptimizeFrame="OptimizeFrame",e.OptimizePlus="OptimizePlus",e.OptimizeTransparency="OptimizeTransparency",e.RemoveDups="RemoveDups",e.RemoveZero="RemoveZero",e.Composite="Composite",e.Merge="Merge",e.Flatten="Flatten",e.Mosaic="Mosaic",e.TrimBounds="TrimBounds"}(IMLayers||(IMLayers={})),function(e){e.Butt="Butt",e.Round="Round",e.Square="Square"}(IMLineCap||(IMLineCap={})),function(e){e.Bevel="Bevel",e.Miter="Miter",e.Round="Round"}(IMLineJoin||(IMLineJoin={})),function(e){e.Align="Align",e.Alpha="Alpha",e.AutoThreshold="AutoThreshold",e.Boolean="Boolean",e.Cache="Cache",e.Channel="Channel",e.Class="Class",e.CLI="CLI",e.ClipPath="ClipPath",e.Coder="Coder",e.Color="Color",e.Colorspace="Colorspace",e.Command="Command",e.Compliance="Compliance",e.Complex="Complex",e.Compose="Compose",e.Compress="Compress",e.Configure="Configure",e.DataType="DataType",e.Debug="Debug",e.Decoration="Decoration",e.Delegate="Delegate",e.Direction="Direction",e.Dispose="Dispose",e.Distort="Distort",e.Dither="Dither",e.Endian="Endian",e.Evaluate="Evaluate",e.FillRule="FillRule",e.Filter="Filter",e.Font="Font",e.Format="Format",e.Function="Function",e.Gradient="Gradient",e.Gravity="Gravity",e.Intensity="Intensity",e.Intent="Intent",e.Interlace="Interlace",e.Interpolate="Interpolate",e.Kernel="Kernel",e.Layers="Layers",e.LineCap="LineCap",e.LineJoin="LineJoin",e.List="List",e.Locale="Locale",e.LogEvent="LogEvent",e.Log="Log",e.Magic="Magic",e.Method="Method",e.Metric="Metric",e.Mime="Mime",e.Mode="Mode",e.Morphology="Morphology",e.Module="Module",e.Noise="Noise",e.Orientation="Orientation",e.PixelChannel="PixelChannel",e.PixelIntensity="PixelIntensity",e.PixelMask="PixelMask",e.PixelTrait="PixelTrait",e.Policy="Policy",e.PolicyDomain="PolicyDomain",e.PolicyRights="PolicyRights",e.Preview="Preview",e.Primitive="Primitive",e.QuantumFormat="QuantumFormat",e.Resource="Resource",e.SparseColor="SparseColor",e.Statistic="Statistic",e.Storage="Storage",e.Stretch="Stretch",e.Style="Style",e.Threshold="Threshold",e.Tool="Tool",e.Type="Type",e.Units="Units",e.Validate="Validate",e.VirtualPixel="VirtualPixel",e.Weight="Weight"}(IMList||(IMList={})),function(e){e.All="All",e.Accelerate="Accelerate",e.Annotate="Annotate",e.Blob="Blob",e.Cache="Cache",e.Coder="Coder",e.Command="Command",e.Configure="Configure",e.Deprecate="Deprecate",e.Draw="Draw",e.Exception="Exception",e.Locale="Locale",e.Module="Module",e.None="None",e.Pixel="Pixel",e.Policy="Policy",e.Resource="Resource",e.Trace="Trace",e.Transform="Transform",e.User="User",e.Wand="Wand",e.X11="X11"}(IMLogEvent||(IMLogEvent={})),function(e){e["Path: /etc/ImageMagick-7/log.xml"]="Path: /etc/ImageMagick-7/log.xml",e["Console        Generations     Limit  Format"]="Console        Generations     Limit  Format",e["-------------------------------------------------------------------------------"]="-------------------------------------------------------------------------------",e["Magick-%g.log            3      2000   %t %r %u %v %d %c[%p]: %m/%f/%l/%d\n  %e"]="Magick-%g.log            3      2000   %t %r %u %v %d %c[%p]: %m/%f/%l/%d\n  %e",e["Path: [built-in]"]="Path: [built-in]",e["Magick-%g.log            0         0   %t %r %u %v %d %c[%p]: %m/%f/%l/%d\n  %e"]="Magick-%g.log            0         0   %t %r %u %v %d %c[%p]: %m/%f/%l/%d\n  %e"}(IMLog||(IMLog={})),function(e){e.FillToBorder="FillToBorder",e.Floodfill="Floodfill",e.Point="Point",e.Replace="Replace",e.Reset="Reset"}(IMMethod||(IMMethod={})),function(e){e.AE="AE",e.DSSIM="DSSIM",e.Fuzz="Fuzz",e.MAE="MAE",e.MEPP="MEPP",e.MSE="MSE",e.NCC="NCC",e.PAE="PAE",e.PHASH="PHASH",e.PSNR="PSNR",e.RMSE="RMSE",e.SSIM="SSIM"}(IMMetric||(IMMetric={})),function(e){e.Concatenate="Concatenate",e.Frame="Frame",e.Unframe="Unframe"}(IMMode||(IMMode={})),function(e){e.Correlate="Correlate",e.Convolve="Convolve",e.Dilate="Dilate",e.Erode="Erode",e.Close="Close",e.Open="Open",e.DilateIntensity="DilateIntensity",e.ErodeIntensity="ErodeIntensity",e.CloseIntensity="CloseIntensity",e.OpenIntensity="OpenIntensity",e.DilateI="DilateI",e.ErodeI="ErodeI",e.CloseI="CloseI",e.OpenI="OpenI",e.Smooth="Smooth",e.EdgeOut="EdgeOut",e.EdgeIn="EdgeIn",e.Edge="Edge",e.TopHat="TopHat",e.BottomHat="BottomHat",e.Hmt="Hmt",e.HitNMiss="HitNMiss",e.HitAndMiss="HitAndMiss",e.Thinning="Thinning",e.Thicken="Thicken",e.Distance="Distance",e.IterativeDistance="IterativeDistance"}(IMMorphology||(IMMorphology={})),function(e){e["Path: /usr/lib/ImageMagick-7.0.8/modules-Q16HDRI/coders"]="Path: /usr/lib/ImageMagick-7.0.8/modules-Q16HDRI/coders",e["Image Coder"]="Image Coder",e["-------------------------------------------------------------------------------"]="-------------------------------------------------------------------------------",e.aai="aai",e.art="art",e.avs="avs",e.bgr="bgr",e.bmp="bmp",e.braille="braille",e.cals="cals",e.caption="caption",e.cin="cin",e.cip="cip",e.clip="clip",e.cmyk="cmyk",e.cut="cut",e.dcm="dcm",e.dds="dds",e.debug="debug",e.dib="dib",e.dng="dng",e.dot="dot",e.dpx="dpx",e.ept="ept",e.exr="exr",e.fax="fax",e.fits="fits",e.gif="gif",e.gradient="gradient",e.gray="gray",e.hald="hald",e.hdr="hdr",e.heic="heic",e.histogram="histogram",e.hrz="hrz",e.html="html",e.icon="icon",e.info="info",e.inline="inline",e.ipl="ipl",e.jbig="jbig",e.jnx="jnx",e.jp2="jp2",e.jpeg="jpeg",e.json="json",e.label="label",e.mac="mac",e.magick="magick",e.map="map",e.mask="mask",e.mat="mat",e.matte="matte",e.meta="meta",e.miff="miff",e.mono="mono",e.mpc="mpc",e.mpeg="mpeg",e.mpr="mpr",e.msl="msl",e.mtv="mtv",e.mvg="mvg",e.null="null",e.otb="otb",e.palm="palm",e.pango="pango",e.pattern="pattern",e.pcd="pcd",e.pcl="pcl",e.pcx="pcx",e.pdb="pdb",e.pdf="pdf",e.pes="pes",e.pgx="pgx",e.pict="pict",e.pix="pix",e.plasma="plasma",e.png="png",e.pnm="pnm",e.ps="ps",e.ps2="ps2",e.ps3="ps3",e.psd="psd",e.pwp="pwp",e.raw="raw",e.rgb="rgb",e.rgf="rgf",e.rla="rla",e.rle="rle",e.scr="scr",e.sct="sct",e.sfw="sfw",e.sgi="sgi",e.sixel="sixel",e.stegano="stegano",e.sun="sun",e.svg="svg",e.tga="tga",e.thumbnail="thumbnail",e.tiff="tiff",e.tile="tile",e.tim="tim",e.ttf="ttf",e.txt="txt",e.uil="uil",e.url="url",e.uyvy="uyvy",e.vicar="vicar",e.vid="vid",e.viff="viff",e.vips="vips",e.wbmp="wbmp",e.webp="webp",e.wmf="wmf",e.wpg="wpg",e.x="x",e.xbm="xbm",e.xc="xc",e.xcf="xcf",e.xpm="xpm",e.xps="xps",e.xtrn="xtrn",e.xwd="xwd",e.ycbcr="ycbcr",e.yuv="yuv",e["Path: /usr/lib/ImageMagick-7.0.8/modules-Q16HDRI/filters"]="Path: /usr/lib/ImageMagick-7.0.8/modules-Q16HDRI/filters",e["Image Filter"]="Image Filter",e.analyze="analyze"}(IMModule||(IMModule={})),function(e){e.Gaussian="Gaussian",e.Impulse="Impulse",e.Laplacian="Laplacian",e.Multiplicative="Multiplicative",e.Poisson="Poisson",e.Random="Random",e.Uniform="Uniform"}(IMNoise||(IMNoise={})),function(e){e.TopLeft="TopLeft",e.TopRight="TopRight",e.BottomRight="BottomRight",e.BottomLeft="BottomLeft",e.LeftTop="LeftTop",e.RightTop="RightTop",e.RightBottom="RightBottom",e.LeftBottom="LeftBottom"}(IMOrientation||(IMOrientation={})),function(e){e.Undefined="Undefined",e.A="A",e.Alpha="Alpha",e.B="B",e.Bk="Bk",e.Black="Black",e.Blue="Blue",e.Cb="Cb",e.Composite="Composite",e.CompositeMask="CompositeMask",e.C="C",e.Cr="Cr",e.Cyan="Cyan",e.Gray="Gray",e.G="G",e.Green="Green",e.Index="Index",e.Intensity="Intensity",e.K="K",e.M="M",e.Magenta="Magenta",e.Meta="Meta",e.O="O",e.R="R",e.ReadMask="ReadMask",e.Red="Red",e.Sync="Sync",e.WriteMask="WriteMask",e.Y="Y",e.Yellow="Yellow"}(IMPixelChannel||(IMPixelChannel={})),function(e){e.Average="Average",e.Brightness="Brightness",e.Lightness="Lightness",e.Mean="Mean",e.MS="MS",e.Rec601Luma="Rec601Luma",e.Rec601Luminance="Rec601Luminance",e.Rec709Luma="Rec709Luma",e.Rec709Luminance="Rec709Luminance",e.RMS="RMS"}(IMPixelIntensity||(IMPixelIntensity={})),function(e){e.R="R",e.Read="Read",e.W="W",e.Write="Write"}(IMPixelMask||(IMPixelMask={})),function(e){e.Blend="Blend",e.Copy="Copy",e.Update="Update"}(IMPixelTrait||(IMPixelTrait={})),function(e){e.Cache="Cache",e.Coder="Coder",e.Delegate="Delegate",e.Filter="Filter",e.Module="Module",e.Path="Path",e.Resource="Resource",e.System="System"}(IMPolicyDomain||(IMPolicyDomain={})),function(e){e.All="All",e.Execute="Execute",e.None="None",e.Read="Read",e.Write="Write"}(IMPolicyRights||(IMPolicyRights={})),function(e){e.AddNoise="AddNoise",e.Blur="Blur",e.Brightness="Brightness",e.Charcoal="Charcoal",e.Despeckle="Despeckle",e.Dull="Dull",e.EdgeDetect="EdgeDetect",e.Gamma="Gamma",e.Grayscale="Grayscale",e.Hue="Hue",e.Implode="Implode",e.JPEG="JPEG",e.OilPaint="OilPaint",e.Quantize="Quantize",e.Raise="Raise",e.ReduceNoise="ReduceNoise",e.Roll="Roll",e.Rotate="Rotate",e.Saturation="Saturation",e.Segment="Segment",e.Shade="Shade",e.Sharpen="Sharpen",e.Shear="Shear",e.Solarize="Solarize",e.Spiff="Spiff",e.Spread="Spread",e.Swirl="Swirl",e.Threshold="Threshold",e.Wave="Wave"}(IMPreview||(IMPreview={})),function(e){e.Alpha="Alpha",e.Arc="Arc",e.Bezier="Bezier",e.Circle="Circle",e.Color="Color",e.Ellipse="Ellipse",e.Image="Image",e.Line="Line",e.Matte="Matte",e.Path="Path",e.Point="Point",e.Polygon="Polygon",e.Polyline="Polyline",e.Rectangle="Rectangle",e.RoundRectangle="RoundRectangle",e.Text="Text"}(IMPrimitive||(IMPrimitive={})),function(e){e.FloatingPoint="FloatingPoint",e.Signed="Signed",e.Unsigned="Unsigned"}(IMQuantumFormat||(IMQuantumFormat={})),function(e){e.Barycentric="Barycentric",e.Bilinear="Bilinear",e.Inverse="Inverse",e.Shepards="Shepards",e.Voronoi="Voronoi",e.Manhattan="Manhattan"}(IMSparseColor||(IMSparseColor={})),function(e){e.Gradient="Gradient",e.Maximum="Maximum",e.Mean="Mean",e.Median="Median",e.Minimum="Minimum",e.Mode="Mode",e.NonPeak="NonPeak",e.RootMeanSquare="RootMeanSquare",e.RMS="RMS",e.StandardDeviation="StandardDeviation"}(IMStatistic||(IMStatistic={})),function(e){e.Char="Char",e.Double="Double",e.Float="Float",e.Long="Long",e.LongLong="LongLong",e.Quantum="Quantum",e.Short="Short"}(IMStorage||(IMStorage={})),function(e){e.Any="Any",e.Condensed="Condensed",e.Expanded="Expanded",e.ExtraCondensed="ExtraCondensed",e.ExtraExpanded="ExtraExpanded",e.Normal="Normal",e.SemiCondensed="SemiCondensed",e.SemiExpanded="SemiExpanded",e.UltraCondensed="UltraCondensed",e.UltraExpanded="UltraExpanded"}(IMStretch||(IMStretch={})),function(e){e.Any="Any",e.Bold="Bold",e.Italic="Italic",e.Normal="Normal",e.Oblique="Oblique"}(IMStyle||(IMStyle={})),function(e){e.animate="animate",e.compare="compare",e.composite="composite",e.conjure="conjure",e.convert="convert",e.display="display",e.identify="identify",e.import="import",e.mogrify="mogrify",e.montage="montage",e.stream="stream"}(IMTool||(IMTool={})),function(e){e.Bilevel="Bilevel",e.ColorSeparation="ColorSeparation",e.ColorSeparationAlpha="ColorSeparationAlpha",e.ColorSeparationMatte="ColorSeparationMatte",e.Grayscale="Grayscale",e.GrayscaleAlpha="GrayscaleAlpha",e.GrayscaleMatte="GrayscaleMatte",e.Optimize="Optimize",e.Palette="Palette",e.PaletteBilevelAlpha="PaletteBilevelAlpha",e.PaletteBilevelMatte="PaletteBilevelMatte",e.PaletteAlpha="PaletteAlpha",e.PaletteMatte="PaletteMatte",e.TrueColorAlpha="TrueColorAlpha",e.TrueColorMatte="TrueColorMatte",e.TrueColor="TrueColor"}(IMType||(IMType={})),function(e){e.PixelsPerInch="PixelsPerInch",e.PixelsPerCentimeter="PixelsPerCentimeter",e["1_"]="1",e["2_"]="2",e["3_"]="3"}(IMUnits||(IMUnits={})),function(e){e.All="All",e.Colorspace="Colorspace",e.Compare="Compare",e.Composite="Composite",e.Convert="Convert",e.FormatsDisk="FormatsDisk",e.FormatsMap="FormatsMap",e.FormatsMemory="FormatsMemory",e.Identify="Identify",e.ImportExport="ImportExport",e.Montage="Montage",e.Stream="Stream",e.None="None"}(IMValidate||(IMValidate={})),function(e){e.Background="Background",e.Black="Black",e.CheckerTile="CheckerTile",e.Dither="Dither",e.Edge="Edge",e.Gray="Gray",e.HorizontalTile="HorizontalTile",e.HorizontalTileEdge="HorizontalTileEdge",e.Mirror="Mirror",e.None="None",e.Random="Random",e.Tile="Tile",e.Transparent="Transparent",e.VerticalTile="VerticalTile",e.VerticalTileEdge="VerticalTileEdge",e.White="White"}(IMVirtualPixel||(IMVirtualPixel={})),function(e){e.Thin="Thin",e.ExtraLight="ExtraLight",e.UltraLight="UltraLight",e.Normal="Normal",e.Regular="Regular",e.Medium="Medium",e.DemiBold="DemiBold",e.SemiBold="SemiBold",e.Bold="Bold",e.ExtraBold="ExtraBold",e.UltraBold="UltraBold",e.Heavy="Heavy",e.Black="Black"}(IMWeight||(IMWeight={}));export{executeOne$$1 as executeOne,isExecuteCommand$$1 as isExecuteCommand,asExecuteConfig$$1 as asExecuteConfig,executeAndReturnOutputFile$$1 as executeAndReturnOutputFile,addExecuteListener$$1 as addExecuteListener,execute$$1 as execute,createImageHome$$1 as createImageHome,newExecutionContext$$1 as newExecutionContext,Call,call,CreatePromiseEvent,arrayToCli,cliToArray,asCommand,blobToString,isInputFile,isOutputFile,readFileAsText,isImage,buildInputFile,asInputFile,asOutputFile,getFileName,getFileNameExtension,loadImageElement$$1 as loadImageElement,buildImageSrc$$1 as buildImageSrc,getInputFilesFromHtmlInputElement$$1 as getInputFilesFromHtmlInputElement,getPixelColor$$1 as getPixelColor,builtInImageNames$$1 as builtInImageNames,getBuiltInImages$$1 as getBuiltInImages,getBuiltInImage$$1 as getBuiltInImage,compare$$1 as compare,compareNumber$$1 as compareNumber,extractInfo$$1 as extractInfo,getConfigureFolders$$1 as getConfigureFolders,knownSupportedReadWriteImageFormats$$1 as knownSupportedReadWriteImageFormats,IMAlign,IMAlpha,IMAutoThreshold,IMBoolean,IMCache,IMChannel,IMClass,IMClipPath,IMColorspace,IMCommand,IMCompliance,IMComplex,IMCompose,IMCompress,IMDataType,IMDebug,IMDecoration,IMDirection,IMDispose,IMDistort,IMDither,IMEndian,IMEvaluate,IMFillRule,IMFilter,IMFunction,IMGradient,IMGravity,IMIntensity,IMIntent,IMInterlace,IMInterpolate,IMKernel,IMLayers,IMLineCap,IMLineJoin,IMList,IMLogEvent,IMLog,IMMethod,IMMetric,IMMode,IMMorphology,IMModule,IMNoise,IMOrientation,IMPixelChannel,IMPixelIntensity,IMPixelMask,IMPixelTrait,IMPolicyDomain,IMPolicyRights,IMPreview,IMPrimitive,IMQuantumFormat,IMSparseColor,IMStatistic,IMStorage,IMStretch,IMStyle,IMTool,IMType,IMUnits,IMValidate,IMVirtualPixel,IMWeight};
