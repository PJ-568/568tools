"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getComponentValidator=exports.getBooleanValidator=exports.getNumberArrayValidator=exports.getFunctionValidator=exports.getStringOrGradientValidator=exports.getStringValidator=exports.getNumberOrAutoValidator=exports.getNumberOrArrayOfNumbersValidator=exports.getNumberValidator=exports.alphaComponent=exports.RGBComponent=void 0;const Global_1=require("./Global"),Util_1=require("./Util");function _formatValue(t){return Util_1.Util._isString(t)?'"'+t+'"':"[object Number]"===Object.prototype.toString.call(t)||Util_1.Util._isBoolean(t)?t:Object.prototype.toString.call(t)}function RGBComponent(t){return t>255?255:t<0?0:Math.round(t)}function alphaComponent(t){return t>1?1:t<1e-4?1e-4:t}function getNumberValidator(){if(Global_1.Konva.isUnminified)return function(t,r){return Util_1.Util._isNumber(t)||Util_1.Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a number.'),t}}function getNumberOrArrayOfNumbersValidator(t){if(Global_1.Konva.isUnminified)return function(r,e){let a=Util_1.Util._isNumber(r),i=Util_1.Util._isArray(r)&&r.length==t;return a||i||Util_1.Util.warn(_formatValue(r)+' is a not valid value for "'+e+'" attribute. The value should be a number or Array<number>('+t+")"),r}}function getNumberOrAutoValidator(){if(Global_1.Konva.isUnminified)return function(t,r){return Util_1.Util._isNumber(t)||"auto"===t||Util_1.Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a number or "auto".'),t}}function getStringValidator(){if(Global_1.Konva.isUnminified)return function(t,r){return Util_1.Util._isString(t)||Util_1.Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a string.'),t}}function getStringOrGradientValidator(){if(Global_1.Konva.isUnminified)return function(t,r){const e=Util_1.Util._isString(t),a="[object CanvasGradient]"===Object.prototype.toString.call(t)||t&&t.addColorStop;return e||a||Util_1.Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a string or a native gradient.'),t}}function getFunctionValidator(){if(Global_1.Konva.isUnminified)return function(t,r){return Util_1.Util._isFunction(t)||Util_1.Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a function.'),t}}function getNumberArrayValidator(){if(Global_1.Konva.isUnminified)return function(t,r){const e=Int8Array?Object.getPrototypeOf(Int8Array):null;return e&&t instanceof e||(Util_1.Util._isArray(t)?t.forEach((function(t){Util_1.Util._isNumber(t)||Util_1.Util.warn('"'+r+'" attribute has non numeric element '+t+". Make sure that all elements are numbers.")})):Util_1.Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a array of numbers.')),t}}function getBooleanValidator(){if(Global_1.Konva.isUnminified)return function(t,r){return!0===t||!1===t||Util_1.Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a boolean.'),t}}function getComponentValidator(t){if(Global_1.Konva.isUnminified)return function(r,e){return null==r||Util_1.Util.isObject(r)||Util_1.Util.warn(_formatValue(r)+' is a not valid value for "'+e+'" attribute. The value should be an object with properties '+t),r}}exports.RGBComponent=RGBComponent,exports.alphaComponent=alphaComponent,exports.getNumberValidator=getNumberValidator,exports.getNumberOrArrayOfNumbersValidator=getNumberOrArrayOfNumbersValidator,exports.getNumberOrAutoValidator=getNumberOrAutoValidator,exports.getStringValidator=getStringValidator,exports.getStringOrGradientValidator=getStringOrGradientValidator,exports.getFunctionValidator=getFunctionValidator,exports.getNumberArrayValidator=getNumberArrayValidator,exports.getBooleanValidator=getBooleanValidator,exports.getComponentValidator=getComponentValidator;
