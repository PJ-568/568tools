import{Util}from"./Util.js";import{Konva}from"./Global.js";function simplifyArray(t){var e,i,a=[],r=t.length,s=Util;for(e=0;e<r;e++)i=t[e],s._isNumber(i)?i=Math.round(1e3*i)/1e3:s._isString(i)||(i+=""),a.push(i);return a}var COMMA=",",OPEN_PAREN="(",CLOSE_PAREN=")",OPEN_PAREN_BRACKET="([",CLOSE_BRACKET_PAREN="])",SEMICOLON=";",DOUBLE_PAREN="()",EQUALS="=",CONTEXT_METHODS=["arc","arcTo","beginPath","bezierCurveTo","clearRect","clip","closePath","createLinearGradient","createPattern","createRadialGradient","drawImage","ellipse","fill","fillText","getImageData","createImageData","lineTo","moveTo","putImageData","quadraticCurveTo","rect","restore","rotate","save","scale","setLineDash","setTransform","stroke","strokeText","transform","translate"],CONTEXT_PROPERTIES=["fillStyle","strokeStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","lineCap","lineDashOffset","lineJoin","lineWidth","miterLimit","font","textAlign","textBaseline","globalAlpha","globalCompositeOperation","imageSmoothingEnabled"];const traceArrMax=100;export class Context{constructor(t){this.canvas=t,Konva.enableTrace&&(this.traceArr=[],this._enableTrace())}fillShape(t){t.fillEnabled()&&this._fill(t)}_fill(t){}strokeShape(t){t.hasStroke()&&this._stroke(t)}_stroke(t){}fillStrokeShape(t){t.attrs.fillAfterStrokeEnabled?(this.strokeShape(t),this.fillShape(t)):(this.fillShape(t),this.strokeShape(t))}getTrace(t,e){var i,a,r,s,o=this.traceArr,n=o.length,l="";for(i=0;i<n;i++)(r=(a=o[i]).method)?(s=a.args,l+=r,t?l+=DOUBLE_PAREN:Util._isArray(s[0])?l+=OPEN_PAREN_BRACKET+s.join(COMMA)+CLOSE_BRACKET_PAREN:(e&&(s=s.map((t=>"number"==typeof t?Math.floor(t):t))),l+=OPEN_PAREN+s.join(COMMA)+CLOSE_PAREN)):(l+=a.property,t||(l+=EQUALS+a.val)),l+=SEMICOLON;return l}clearTrace(){this.traceArr=[]}_trace(t){var e=this.traceArr;e.push(t),e.length>=100&&e.shift()}reset(){var t=this.getCanvas().getPixelRatio();this.setTransform(1*t,0,0,1*t,0,0)}getCanvas(){return this.canvas}clear(t){var e=this.getCanvas();t?this.clearRect(t.x||0,t.y||0,t.width||0,t.height||0):this.clearRect(0,0,e.getWidth()/e.pixelRatio,e.getHeight()/e.pixelRatio)}_applyLineCap(t){const e=t.attrs.lineCap;e&&this.setAttr("lineCap",e)}_applyOpacity(t){var e=t.getAbsoluteOpacity();1!==e&&this.setAttr("globalAlpha",e)}_applyLineJoin(t){const e=t.attrs.lineJoin;e&&this.setAttr("lineJoin",e)}setAttr(t,e){this._context[t]=e}arc(t,e,i,a,r,s){this._context.arc(t,e,i,a,r,s)}arcTo(t,e,i,a,r){this._context.arcTo(t,e,i,a,r)}beginPath(){this._context.beginPath()}bezierCurveTo(t,e,i,a,r,s){this._context.bezierCurveTo(t,e,i,a,r,s)}clearRect(t,e,i,a){this._context.clearRect(t,e,i,a)}clip(){this._context.clip()}closePath(){this._context.closePath()}createImageData(t,e){var i=arguments;return 2===i.length?this._context.createImageData(t,e):1===i.length?this._context.createImageData(t):void 0}createLinearGradient(t,e,i,a){return this._context.createLinearGradient(t,e,i,a)}createPattern(t,e){return this._context.createPattern(t,e)}createRadialGradient(t,e,i,a,r,s){return this._context.createRadialGradient(t,e,i,a,r,s)}drawImage(t,e,i,a,r,s,o,n,l){var h=arguments,c=this._context;3===h.length?c.drawImage(t,e,i):5===h.length?c.drawImage(t,e,i,a,r):9===h.length&&c.drawImage(t,e,i,a,r,s,o,n,l)}ellipse(t,e,i,a,r,s,o,n){this._context.ellipse(t,e,i,a,r,s,o,n)}isPointInPath(t,e,i,a){return i?this._context.isPointInPath(i,t,e,a):this._context.isPointInPath(t,e,a)}fill(t){t?this._context.fill(t):this._context.fill()}fillRect(t,e,i,a){this._context.fillRect(t,e,i,a)}strokeRect(t,e,i,a){this._context.strokeRect(t,e,i,a)}fillText(t,e,i,a){a?this._context.fillText(t,e,i,a):this._context.fillText(t,e,i)}measureText(t){return this._context.measureText(t)}getImageData(t,e,i,a){return this._context.getImageData(t,e,i,a)}lineTo(t,e){this._context.lineTo(t,e)}moveTo(t,e){this._context.moveTo(t,e)}rect(t,e,i,a){this._context.rect(t,e,i,a)}putImageData(t,e,i){this._context.putImageData(t,e,i)}quadraticCurveTo(t,e,i,a){this._context.quadraticCurveTo(t,e,i,a)}restore(){this._context.restore()}rotate(t){this._context.rotate(t)}save(){this._context.save()}scale(t,e){this._context.scale(t,e)}setLineDash(t){this._context.setLineDash?this._context.setLineDash(t):"mozDash"in this._context?this._context.mozDash=t:"webkitLineDash"in this._context&&(this._context.webkitLineDash=t)}getLineDash(){return this._context.getLineDash()}setTransform(t,e,i,a,r,s){this._context.setTransform(t,e,i,a,r,s)}stroke(t){t?this._context.stroke(t):this._context.stroke()}strokeText(t,e,i,a){this._context.strokeText(t,e,i,a)}transform(t,e,i,a,r,s){this._context.transform(t,e,i,a,r,s)}translate(t,e){this._context.translate(t,e)}_enableTrace(){var t,e,i=this,a=CONTEXT_METHODS.length,r=this.setAttr,s=function(t){var a,r=i[t];i[t]=function(){return e=simplifyArray(Array.prototype.slice.call(arguments,0)),a=r.apply(i,arguments),i._trace({method:t,args:e}),a}};for(t=0;t<a;t++)s(CONTEXT_METHODS[t]);i.setAttr=function(){r.apply(i,arguments);var t=arguments[0],e=arguments[1];"shadowOffsetX"!==t&&"shadowOffsetY"!==t&&"shadowBlur"!==t||(e/=this.canvas.getPixelRatio()),i._trace({property:t,val:e})}}_applyGlobalCompositeOperation(t){const e=t.attrs.globalCompositeOperation;!e||"source-over"===e||this.setAttr("globalCompositeOperation",e)}}CONTEXT_PROPERTIES.forEach((function(t){Object.defineProperty(Context.prototype,t,{get(){return this._context[t]},set(e){this._context[t]=e}})}));export class SceneContext extends Context{constructor(t){super(t),this._context=t._canvas.getContext("2d")}_fillColor(t){var e=t.fill();this.setAttr("fillStyle",e),t._fillFunc(this)}_fillPattern(t){this.setAttr("fillStyle",t._getFillPattern()),t._fillFunc(this)}_fillLinearGradient(t){var e=t._getLinearGradient();e&&(this.setAttr("fillStyle",e),t._fillFunc(this))}_fillRadialGradient(t){const e=t._getRadialGradient();e&&(this.setAttr("fillStyle",e),t._fillFunc(this))}_fill(t){const e=t.fill(),i=t.getFillPriority();if(e&&"color"===i)return void this._fillColor(t);const a=t.getFillPatternImage();if(a&&"pattern"===i)return void this._fillPattern(t);const r=t.getFillLinearGradientColorStops();if(r&&"linear-gradient"===i)return void this._fillLinearGradient(t);const s=t.getFillRadialGradientColorStops();s&&"radial-gradient"===i?this._fillRadialGradient(t):e?this._fillColor(t):a?this._fillPattern(t):r?this._fillLinearGradient(t):s&&this._fillRadialGradient(t)}_strokeLinearGradient(t){const e=t.getStrokeLinearGradientStartPoint(),i=t.getStrokeLinearGradientEndPoint(),a=t.getStrokeLinearGradientColorStops(),r=this.createLinearGradient(e.x,e.y,i.x,i.y);if(a){for(var s=0;s<a.length;s+=2)r.addColorStop(a[s],a[s+1]);this.setAttr("strokeStyle",r)}}_stroke(t){var e=t.dash(),i=t.getStrokeScaleEnabled();if(t.hasStroke()){if(!i){this.save();var a=this.getCanvas().getPixelRatio();this.setTransform(a,0,0,a,0,0)}this._applyLineCap(t),e&&t.dashEnabled()&&(this.setLineDash(e),this.setAttr("lineDashOffset",t.dashOffset())),this.setAttr("lineWidth",t.strokeWidth()),t.getShadowForStrokeEnabled()||this.setAttr("shadowColor","rgba(0,0,0,0)"),t.getStrokeLinearGradientColorStops()?this._strokeLinearGradient(t):this.setAttr("strokeStyle",t.stroke()),t._strokeFunc(this),i||this.restore()}}_applyShadow(t){var e,i,a,r=null!==(e=t.getShadowRGBA())&&void 0!==e?e:"black",s=null!==(i=t.getShadowBlur())&&void 0!==i?i:5,o=null!==(a=t.getShadowOffset())&&void 0!==a?a:{x:0,y:0},n=t.getAbsoluteScale(),l=this.canvas.getPixelRatio(),h=n.x*l,c=n.y*l;this.setAttr("shadowColor",r),this.setAttr("shadowBlur",s*Math.min(Math.abs(h),Math.abs(c))),this.setAttr("shadowOffsetX",o.x*h),this.setAttr("shadowOffsetY",o.y*c)}}export class HitContext extends Context{constructor(t){super(t),this._context=t._canvas.getContext("2d",{willReadFrequently:!0})}_fill(t){this.save(),this.setAttr("fillStyle",t.colorKey),t._fillFuncHit(this),this.restore()}strokeShape(t){t.hasHitStroke()&&this._stroke(t)}_stroke(t){if(t.hasHitStroke()){const r=t.getStrokeScaleEnabled();if(!r){this.save();var e=this.getCanvas().getPixelRatio();this.setTransform(e,0,0,e,0,0)}this._applyLineCap(t);var i=t.hitStrokeWidth(),a="auto"===i?t.strokeWidth():i;this.setAttr("lineWidth",a),this.setAttr("strokeStyle",t.colorKey),t._strokeFuncHit(this),r||this.restore()}}}
