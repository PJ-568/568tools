import{Konva}from"./Global.js";import{Transform,Util}from"./Util.js";import{Factory}from"./Factory.js";import{Node}from"./Node.js";import{getNumberValidator,getNumberOrAutoValidator,getStringValidator,getBooleanValidator,getStringOrGradientValidator}from"./Validators.js";import{_registerNode}from"./Global.js";import*as PointerEvents from"./PointerEvents.js";var HAS_SHADOW="hasShadow",SHADOW_RGBA="shadowRGBA",patternImage="patternImage",linearGradient="linearGradient",radialGradient="radialGradient";let dummyContext;function getDummyContext(){return dummyContext||(dummyContext=Util.createCanvasElement().getContext("2d"),dummyContext)}export const shapes={};function _fillFunc(t){t.fill()}function _strokeFunc(t){t.stroke()}function _fillFuncHit(t){t.fill()}function _strokeFuncHit(t){t.stroke()}function _clearHasShadowCache(){this._clearCache(HAS_SHADOW)}function _clearGetShadowRGBACache(){this._clearCache(SHADOW_RGBA)}function _clearFillPatternCache(){this._clearCache(patternImage)}function _clearLinearGradientCache(){this._clearCache(linearGradient)}function _clearRadialGradientCache(){this._clearCache(radialGradient)}export class Shape extends Node{constructor(t){let e;for(super(t);e=Util.getRandomColor(),!e||e in shapes;);this.colorKey=e,shapes[e]=this}getContext(){return Util.warn("shape.getContext() method is deprecated. Please do not use it."),this.getLayer().getContext()}getCanvas(){return Util.warn("shape.getCanvas() method is deprecated. Please do not use it."),this.getLayer().getCanvas()}getSceneFunc(){return this.attrs.sceneFunc||this._sceneFunc}getHitFunc(){return this.attrs.hitFunc||this._hitFunc}hasShadow(){return this._getCache(HAS_SHADOW,this._hasShadow)}_hasShadow(){return this.shadowEnabled()&&0!==this.shadowOpacity()&&!!(this.shadowColor()||this.shadowBlur()||this.shadowOffsetX()||this.shadowOffsetY())}_getFillPattern(){return this._getCache(patternImage,this.__getFillPattern)}__getFillPattern(){if(this.fillPatternImage()){const t=getDummyContext().createPattern(this.fillPatternImage(),this.fillPatternRepeat()||"repeat");if(t&&t.setTransform){const e=new Transform;e.translate(this.fillPatternX(),this.fillPatternY()),e.rotate(Konva.getAngle(this.fillPatternRotation())),e.scale(this.fillPatternScaleX(),this.fillPatternScaleY()),e.translate(-1*this.fillPatternOffsetX(),-1*this.fillPatternOffsetY());const a=e.getMatrix(),r="undefined"==typeof DOMMatrix?{a:a[0],b:a[1],c:a[2],d:a[3],e:a[4],f:a[5]}:new DOMMatrix(a);t.setTransform(r)}return t}}_getLinearGradient(){return this._getCache(linearGradient,this.__getLinearGradient)}__getLinearGradient(){var t=this.fillLinearGradientColorStops();if(t){for(var e=getDummyContext(),a=this.fillLinearGradientStartPoint(),r=this.fillLinearGradientEndPoint(),i=e.createLinearGradient(a.x,a.y,r.x,r.y),o=0;o<t.length;o+=2)i.addColorStop(t[o],t[o+1]);return i}}_getRadialGradient(){return this._getCache(radialGradient,this.__getRadialGradient)}__getRadialGradient(){var t=this.fillRadialGradientColorStops();if(t){for(var e=getDummyContext(),a=this.fillRadialGradientStartPoint(),r=this.fillRadialGradientEndPoint(),i=e.createRadialGradient(a.x,a.y,this.fillRadialGradientStartRadius(),r.x,r.y,this.fillRadialGradientEndRadius()),o=0;o<t.length;o+=2)i.addColorStop(t[o],t[o+1]);return i}}getShadowRGBA(){return this._getCache(SHADOW_RGBA,this._getShadowRGBA)}_getShadowRGBA(){if(this.hasShadow()){var t=Util.colorToRGBA(this.shadowColor());return t?"rgba("+t.r+","+t.g+","+t.b+","+t.a*(this.shadowOpacity()||1)+")":void 0}}hasFill(){return this._calculate("hasFill",["fillEnabled","fill","fillPatternImage","fillLinearGradientColorStops","fillRadialGradientColorStops"],(()=>this.fillEnabled()&&!!(this.fill()||this.fillPatternImage()||this.fillLinearGradientColorStops()||this.fillRadialGradientColorStops())))}hasStroke(){return this._calculate("hasStroke",["strokeEnabled","strokeWidth","stroke","strokeLinearGradientColorStops"],(()=>this.strokeEnabled()&&this.strokeWidth()&&!(!this.stroke()&&!this.strokeLinearGradientColorStops())))}hasHitStroke(){const t=this.hitStrokeWidth();return"auto"===t?this.hasStroke():this.strokeEnabled()&&!!t}intersects(t){var e=this.getStage().bufferHitCanvas;return e.getContext().clear(),this.drawHit(e,null,!0),e.context.getImageData(Math.round(t.x),Math.round(t.y),1,1).data[3]>0}destroy(){return Node.prototype.destroy.call(this),delete shapes[this.colorKey],delete this.colorKey,this}_useBufferCanvas(t){var e;if(!this.getStage())return!1;if(!(null===(e=this.attrs.perfectDrawEnabled)||void 0===e||e))return!1;const a=t||this.hasFill(),r=this.hasStroke(),i=1!==this.getAbsoluteOpacity();if(a&&r&&i)return!0;const o=this.hasShadow(),n=this.shadowForStrokeEnabled();return!!(a&&r&&o&&n)}setStrokeHitEnabled(t){Util.warn("strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead."),t?this.hitStrokeWidth("auto"):this.hitStrokeWidth(0)}getStrokeHitEnabled(){return 0!==this.hitStrokeWidth()}getSelfRect(){var t=this.size();return{x:this._centroid?-t.width/2:0,y:this._centroid?-t.height/2:0,width:t.width,height:t.height}}getClientRect(t={}){const e=t.skipTransform,a=t.relativeTo,r=this.getSelfRect(),i=!t.skipStroke&&this.hasStroke()&&this.strokeWidth()||0,o=r.width+i,n=r.height+i,d=!t.skipShadow&&this.hasShadow(),l=d?this.shadowOffsetX():0,s=d?this.shadowOffsetY():0,h=o+Math.abs(l),c=n+Math.abs(s),S=d&&this.shadowBlur()||0,p={width:h+2*S,height:c+2*S,x:-(i/2+S)+Math.min(l,0)+r.x,y:-(i/2+S)+Math.min(s,0)+r.y};return e?p:this._transformedRect(p,a)}drawScene(t,e){var a,r,i=this.getLayer(),o=t||i.getCanvas(),n=o.getContext(),d=this._getCanvasCache(),l=this.getSceneFunc(),s=this.hasShadow(),h=o.isCache,c=e===this;if(!this.isVisible()&&!c)return this;if(d){n.save();var S=this.getAbsoluteTransform(e).getMatrix();return n.transform(S[0],S[1],S[2],S[3],S[4],S[5]),this._drawCachedSceneCanvas(n),n.restore(),this}if(!l)return this;if(n.save(),this._useBufferCanvas()&&!h){(r=(a=this.getStage().bufferCanvas).getContext()).clear(),r.save(),r._applyLineJoin(this);var p=this.getAbsoluteTransform(e).getMatrix();r.transform(p[0],p[1],p[2],p[3],p[4],p[5]),l.call(this,r,this),r.restore();var f=a.pixelRatio;s&&n._applyShadow(this),n._applyOpacity(this),n._applyGlobalCompositeOperation(this),n.drawImage(a._canvas,0,0,a.width/f,a.height/f)}else{if(n._applyLineJoin(this),!c){p=this.getAbsoluteTransform(e).getMatrix();n.transform(p[0],p[1],p[2],p[3],p[4],p[5]),n._applyOpacity(this),n._applyGlobalCompositeOperation(this)}s&&n._applyShadow(this),l.call(this,n,this)}return n.restore(),this}drawHit(t,e,a=!1){if(!this.shouldDrawHit(e,a))return this;var r=this.getLayer(),i=t||r.hitCanvas,o=i&&i.getContext(),n=this.hitFunc()||this.sceneFunc(),d=this._getCanvasCache(),l=d&&d.hit;if(this.colorKey||Util.warn("Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()"),l){o.save();var s=this.getAbsoluteTransform(e).getMatrix();return o.transform(s[0],s[1],s[2],s[3],s[4],s[5]),this._drawCachedHitCanvas(o),o.restore(),this}if(!n)return this;o.save(),o._applyLineJoin(this);if(!(this===e)){var h=this.getAbsoluteTransform(e).getMatrix();o.transform(h[0],h[1],h[2],h[3],h[4],h[5])}return n.call(this,o,this),o.restore(),this}drawHitFromCache(t=0){var e,a,r,i,o,n=this._getCanvasCache(),d=this._getCachedSceneCanvas(),l=n.hit,s=l.getContext(),h=l.getWidth(),c=l.getHeight();s.clear(),s.drawImage(d._canvas,0,0,h,c);try{for(r=(a=(e=s.getImageData(0,0,h,c)).data).length,i=Util._hexToRgb(this.colorKey),o=0;o<r;o+=4)a[o+3]>t?(a[o]=i.r,a[o+1]=i.g,a[o+2]=i.b,a[o+3]=255):a[o+3]=0;s.putImageData(e,0,0)}catch(t){Util.error("Unable to draw hit graph from cached scene canvas. "+t.message)}return this}hasPointerCapture(t){return PointerEvents.hasPointerCapture(t,this)}setPointerCapture(t){PointerEvents.setPointerCapture(t,this)}releaseCapture(t){PointerEvents.releaseCapture(t,this)}}Shape.prototype._fillFunc=_fillFunc,Shape.prototype._strokeFunc=_strokeFunc,Shape.prototype._fillFuncHit=_fillFuncHit,Shape.prototype._strokeFuncHit=_strokeFuncHit,Shape.prototype._centroid=!1,Shape.prototype.nodeType="Shape",_registerNode(Shape),Shape.prototype.eventListeners={},Shape.prototype.on.call(Shape.prototype,"shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva",_clearHasShadowCache),Shape.prototype.on.call(Shape.prototype,"shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva",_clearGetShadowRGBACache),Shape.prototype.on.call(Shape.prototype,"fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva",_clearFillPatternCache),Shape.prototype.on.call(Shape.prototype,"fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva",_clearLinearGradientCache),Shape.prototype.on.call(Shape.prototype,"fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva",_clearRadialGradientCache),Factory.addGetterSetter(Shape,"stroke",void 0,getStringOrGradientValidator()),Factory.addGetterSetter(Shape,"strokeWidth",2,getNumberValidator()),Factory.addGetterSetter(Shape,"fillAfterStrokeEnabled",!1),Factory.addGetterSetter(Shape,"hitStrokeWidth","auto",getNumberOrAutoValidator()),Factory.addGetterSetter(Shape,"strokeHitEnabled",!0,getBooleanValidator()),Factory.addGetterSetter(Shape,"perfectDrawEnabled",!0,getBooleanValidator()),Factory.addGetterSetter(Shape,"shadowForStrokeEnabled",!0,getBooleanValidator()),Factory.addGetterSetter(Shape,"lineJoin"),Factory.addGetterSetter(Shape,"lineCap"),Factory.addGetterSetter(Shape,"sceneFunc"),Factory.addGetterSetter(Shape,"hitFunc"),Factory.addGetterSetter(Shape,"dash"),Factory.addGetterSetter(Shape,"dashOffset",0,getNumberValidator()),Factory.addGetterSetter(Shape,"shadowColor",void 0,getStringValidator()),Factory.addGetterSetter(Shape,"shadowBlur",0,getNumberValidator()),Factory.addGetterSetter(Shape,"shadowOpacity",1,getNumberValidator()),Factory.addComponentsGetterSetter(Shape,"shadowOffset",["x","y"]),Factory.addGetterSetter(Shape,"shadowOffsetX",0,getNumberValidator()),Factory.addGetterSetter(Shape,"shadowOffsetY",0,getNumberValidator()),Factory.addGetterSetter(Shape,"fillPatternImage"),Factory.addGetterSetter(Shape,"fill",void 0,getStringOrGradientValidator()),Factory.addGetterSetter(Shape,"fillPatternX",0,getNumberValidator()),Factory.addGetterSetter(Shape,"fillPatternY",0,getNumberValidator()),Factory.addGetterSetter(Shape,"fillLinearGradientColorStops"),Factory.addGetterSetter(Shape,"strokeLinearGradientColorStops"),Factory.addGetterSetter(Shape,"fillRadialGradientStartRadius",0),Factory.addGetterSetter(Shape,"fillRadialGradientEndRadius",0),Factory.addGetterSetter(Shape,"fillRadialGradientColorStops"),Factory.addGetterSetter(Shape,"fillPatternRepeat","repeat"),Factory.addGetterSetter(Shape,"fillEnabled",!0),Factory.addGetterSetter(Shape,"strokeEnabled",!0),Factory.addGetterSetter(Shape,"shadowEnabled",!0),Factory.addGetterSetter(Shape,"dashEnabled",!0),Factory.addGetterSetter(Shape,"strokeScaleEnabled",!0),Factory.addGetterSetter(Shape,"fillPriority","color"),Factory.addComponentsGetterSetter(Shape,"fillPatternOffset",["x","y"]),Factory.addGetterSetter(Shape,"fillPatternOffsetX",0,getNumberValidator()),Factory.addGetterSetter(Shape,"fillPatternOffsetY",0,getNumberValidator()),Factory.addComponentsGetterSetter(Shape,"fillPatternScale",["x","y"]),Factory.addGetterSetter(Shape,"fillPatternScaleX",1,getNumberValidator()),Factory.addGetterSetter(Shape,"fillPatternScaleY",1,getNumberValidator()),Factory.addComponentsGetterSetter(Shape,"fillLinearGradientStartPoint",["x","y"]),Factory.addComponentsGetterSetter(Shape,"strokeLinearGradientStartPoint",["x","y"]),Factory.addGetterSetter(Shape,"fillLinearGradientStartPointX",0),Factory.addGetterSetter(Shape,"strokeLinearGradientStartPointX",0),Factory.addGetterSetter(Shape,"fillLinearGradientStartPointY",0),Factory.addGetterSetter(Shape,"strokeLinearGradientStartPointY",0),Factory.addComponentsGetterSetter(Shape,"fillLinearGradientEndPoint",["x","y"]),Factory.addComponentsGetterSetter(Shape,"strokeLinearGradientEndPoint",["x","y"]),Factory.addGetterSetter(Shape,"fillLinearGradientEndPointX",0),Factory.addGetterSetter(Shape,"strokeLinearGradientEndPointX",0),Factory.addGetterSetter(Shape,"fillLinearGradientEndPointY",0),Factory.addGetterSetter(Shape,"strokeLinearGradientEndPointY",0),Factory.addComponentsGetterSetter(Shape,"fillRadialGradientStartPoint",["x","y"]),Factory.addGetterSetter(Shape,"fillRadialGradientStartPointX",0),Factory.addGetterSetter(Shape,"fillRadialGradientStartPointY",0),Factory.addComponentsGetterSetter(Shape,"fillRadialGradientEndPoint",["x","y"]),Factory.addGetterSetter(Shape,"fillRadialGradientEndPointX",0),Factory.addGetterSetter(Shape,"fillRadialGradientEndPointY",0),Factory.addGetterSetter(Shape,"fillPatternRotation",0),Factory.backCompat(Shape,{dashArray:"dash",getDashArray:"getDash",setDashArray:"getDash",drawFunc:"sceneFunc",getDrawFunc:"getSceneFunc",setDrawFunc:"setSceneFunc",drawHitFunc:"hitFunc",getDrawHitFunc:"getHitFunc",setDrawHitFunc:"setHitFunc"});
