import{Konva}from"./Global.js";import{Util}from"./Util.js";function _formatValue(t){return Util._isString(t)?'"'+t+'"':"[object Number]"===Object.prototype.toString.call(t)||Util._isBoolean(t)?t:Object.prototype.toString.call(t)}export function RGBComponent(t){return t>255?255:t<0?0:Math.round(t)}export function alphaComponent(t){return t>1?1:t<1e-4?1e-4:t}export function getNumberValidator(){if(Konva.isUnminified)return function(t,r){return Util._isNumber(t)||Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a number.'),t}}export function getNumberOrArrayOfNumbersValidator(t){if(Konva.isUnminified)return function(r,n){let i=Util._isNumber(r),e=Util._isArray(r)&&r.length==t;return i||e||Util.warn(_formatValue(r)+' is a not valid value for "'+n+'" attribute. The value should be a number or Array<number>('+t+")"),r}}export function getNumberOrAutoValidator(){if(Konva.isUnminified)return function(t,r){return Util._isNumber(t)||"auto"===t||Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a number or "auto".'),t}}export function getStringValidator(){if(Konva.isUnminified)return function(t,r){return Util._isString(t)||Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a string.'),t}}export function getStringOrGradientValidator(){if(Konva.isUnminified)return function(t,r){const n=Util._isString(t),i="[object CanvasGradient]"===Object.prototype.toString.call(t)||t&&t.addColorStop;return n||i||Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a string or a native gradient.'),t}}export function getFunctionValidator(){if(Konva.isUnminified)return function(t,r){return Util._isFunction(t)||Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a function.'),t}}export function getNumberArrayValidator(){if(Konva.isUnminified)return function(t,r){const n=Int8Array?Object.getPrototypeOf(Int8Array):null;return n&&t instanceof n||(Util._isArray(t)?t.forEach((function(t){Util._isNumber(t)||Util.warn('"'+r+'" attribute has non numeric element '+t+". Make sure that all elements are numbers.")})):Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a array of numbers.')),t}}export function getBooleanValidator(){if(Konva.isUnminified)return function(t,r){return!0===t||!1===t||Util.warn(_formatValue(t)+' is a not valid value for "'+r+'" attribute. The value should be a boolean.'),t}}export function getComponentValidator(t){if(Konva.isUnminified)return function(r,n){return null==r||Util.isObject(r)||Util.warn(_formatValue(r)+' is a not valid value for "'+n+'" attribute. The value should be an object with properties '+t),r}}
