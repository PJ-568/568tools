"use strict";var utils=require("./utils"),external=require("./external"),utf8=require("./utf8"),ZipEntries=require("./zipEntries"),Crc32Probe=require("./stream/Crc32Probe"),nodejsUtils=require("./nodejsUtils");function checkEntryCRC32(e){return new external.Promise((function(r,i){var t=e.decompressed.getContentWorker().pipe(new Crc32Probe);t.on("error",(function(e){i(e)})).on("end",(function(){t.streamInfo.crc32!==e.decompressed.crc32?i(new Error("Corrupted zip : CRC32 mismatch")):r()})).resume()}))}module.exports=function(e,r){var i=this;return r=utils.extend(r||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:utf8.utf8decode}),nodejsUtils.isNode&&nodejsUtils.isStream(e)?external.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):utils.prepareContent("the loaded zip file",e,!0,r.optimizedBinaryString,r.base64).then((function(e){var i=new ZipEntries(r);return i.load(e),i})).then((function(e){var i=[external.Promise.resolve(e)],t=e.files;if(r.checkCRC32)for(var n=0;n<t.length;n++)i.push(checkEntryCRC32(t[n]));return external.Promise.all(i)})).then((function(e){for(var t=e.shift(),n=t.files,s=0;s<n.length;s++){var o=n[s],a=o.fileNameStr,l=utils.resolve(o.fileNameStr);i.file(l,o.decompressed,{binary:!0,optimizedBinaryString:!0,date:o.date,dir:o.dir,comment:o.fileCommentStr.length?o.fileCommentStr:null,unixPermissions:o.unixPermissions,dosPermissions:o.dosPermissions,createFolders:r.createFolders}),o.dir||(i.file(l).unsafeOriginalName=a)}return t.zipComment.length&&(i.comment=t.zipComment),i}))};
