"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Arc=void 0;const Factory_1=require("../Factory"),Shape_1=require("../Shape"),Global_1=require("../Global"),Validators_1=require("../Validators"),Global_2=require("../Global");class Arc extends Shape_1.Shape{_sceneFunc(t){var e=Global_1.Konva.getAngle(this.angle()),r=this.clockwise();t.beginPath(),t.arc(0,0,this.outerRadius(),0,e,r),t.arc(0,0,this.innerRadius(),e,0,!r),t.closePath(),t.fillStrokeShape(this)}getWidth(){return 2*this.outerRadius()}getHeight(){return 2*this.outerRadius()}setWidth(t){this.outerRadius(t/2)}setHeight(t){this.outerRadius(t/2)}getSelfRect(){const t=this.innerRadius(),e=this.outerRadius(),r=this.clockwise(),a=Global_1.Konva.getAngle(r?360-this.angle():this.angle()),i=Math.cos(Math.min(a,Math.PI)),o=Math.sin(Math.min(Math.max(Math.PI,a),3*Math.PI/2)),s=Math.sin(Math.min(a,Math.PI/2)),c=i*(i>0?t:e),l=o*(o>0?t:e),d=s*(s>0?e:t);return{x:c,y:r?-1*d:l,width:1*e-c,height:d-l}}}exports.Arc=Arc,Arc.prototype._centroid=!0,Arc.prototype.className="Arc",Arc.prototype._attrsAffectingSize=["innerRadius","outerRadius"],(0,Global_2._registerNode)(Arc),Factory_1.Factory.addGetterSetter(Arc,"innerRadius",0,(0,Validators_1.getNumberValidator)()),Factory_1.Factory.addGetterSetter(Arc,"outerRadius",0,(0,Validators_1.getNumberValidator)()),Factory_1.Factory.addGetterSetter(Arc,"angle",0,(0,Validators_1.getNumberValidator)()),Factory_1.Factory.addGetterSetter(Arc,"clockwise",!1,(0,Validators_1.getBooleanValidator)());
