"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RegularPolygon=void 0;const Factory_1=require("../Factory"),Shape_1=require("../Shape"),Validators_1=require("../Validators"),Global_1=require("../Global");class RegularPolygon extends Shape_1.Shape{_sceneFunc(t){const e=this._getPoints();t.beginPath(),t.moveTo(e[0].x,e[0].y);for(var r=1;r<e.length;r++)t.lineTo(e[r].x,e[r].y);t.closePath(),t.fillStrokeShape(this)}_getPoints(){const t=this.attrs.sides,e=this.attrs.radius||0,r=[];for(var a=0;a<t;a++)r.push({x:e*Math.sin(2*a*Math.PI/t),y:-1*e*Math.cos(2*a*Math.PI/t)});return r}getSelfRect(){const t=this._getPoints();var e=t[0].x,r=t[0].y,a=t[0].x,o=t[0].y;return t.forEach((t=>{e=Math.min(e,t.x),r=Math.max(r,t.x),a=Math.min(a,t.y),o=Math.max(o,t.y)})),{x:e,y:a,width:r-e,height:o-a}}getWidth(){return 2*this.radius()}getHeight(){return 2*this.radius()}setWidth(t){this.radius(t/2)}setHeight(t){this.radius(t/2)}}exports.RegularPolygon=RegularPolygon,RegularPolygon.prototype.className="RegularPolygon",RegularPolygon.prototype._centroid=!0,RegularPolygon.prototype._attrsAffectingSize=["radius"],(0,Global_1._registerNode)(RegularPolygon),Factory_1.Factory.addGetterSetter(RegularPolygon,"radius",0,(0,Validators_1.getNumberValidator)()),Factory_1.Factory.addGetterSetter(RegularPolygon,"sides",0,(0,Validators_1.getNumberValidator)());
