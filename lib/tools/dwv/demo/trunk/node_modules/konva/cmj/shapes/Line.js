"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Line=void 0;const Factory_1=require("../Factory"),Shape_1=require("../Shape"),Validators_1=require("../Validators"),Global_1=require("../Global");function getControlPoints(t,e,i,n,o,s,r){var a=Math.sqrt(Math.pow(i-t,2)+Math.pow(n-e,2)),h=Math.sqrt(Math.pow(o-i,2)+Math.pow(s-n,2)),l=r*a/(a+h),c=r*h/(a+h);return[i-l*(o-t),n-l*(s-e),i+c*(o-t),n+c*(s-e)]}function expandPoints(t,e){var i,n,o=t.length,s=[];for(i=2;i<o-2;i+=2)n=getControlPoints(t[i-2],t[i-1],t[i],t[i+1],t[i+2],t[i+3],e),isNaN(n[0])||(s.push(n[0]),s.push(n[1]),s.push(t[i]),s.push(t[i+1]),s.push(n[2]),s.push(n[3]));return s}class Line extends Shape_1.Shape{constructor(t){super(t),this.on("pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva",(function(){this._clearCache("tensionPoints")}))}_sceneFunc(t){var e,i,n,o=this.points(),s=o.length,r=this.tension(),a=this.closed(),h=this.bezier();if(s){if(t.beginPath(),t.moveTo(o[0],o[1]),0!==r&&s>4){for(i=(e=this.getTensionPoints()).length,n=a?0:4,a||t.quadraticCurveTo(e[0],e[1],e[2],e[3]);n<i-2;)t.bezierCurveTo(e[n++],e[n++],e[n++],e[n++],e[n++],e[n++]);a||t.quadraticCurveTo(e[i-2],e[i-1],o[s-2],o[s-1])}else if(h)for(n=2;n<s;)t.bezierCurveTo(o[n++],o[n++],o[n++],o[n++],o[n++],o[n++]);else for(n=2;n<s;n+=2)t.lineTo(o[n],o[n+1]);a?(t.closePath(),t.fillStrokeShape(this)):t.strokeShape(this)}}getTensionPoints(){return this._getCache("tensionPoints",this._getTensionPoints)}_getTensionPoints(){return this.closed()?this._getTensionPointsClosed():expandPoints(this.points(),this.tension())}_getTensionPointsClosed(){var t=this.points(),e=t.length,i=this.tension(),n=getControlPoints(t[e-2],t[e-1],t[0],t[1],t[2],t[3],i),o=getControlPoints(t[e-4],t[e-3],t[e-2],t[e-1],t[0],t[1],i),s=expandPoints(t,i);return[n[2],n[3]].concat(s).concat([o[0],o[1],t[e-2],t[e-1],o[2],o[3],n[0],n[1],t[0],t[1]])}getWidth(){return this.getSelfRect().width}getHeight(){return this.getSelfRect().height}getSelfRect(){var t=this.points();if(t.length<4)return{x:t[0]||0,y:t[1]||0,width:0,height:0};for(var e,i,n=(t=0!==this.tension()?[t[0],t[1],...this._getTensionPoints(),t[t.length-2],t[t.length-1]]:this.points())[0],o=t[0],s=t[1],r=t[1],a=0;a<t.length/2;a++)e=t[2*a],i=t[2*a+1],n=Math.min(n,e),o=Math.max(o,e),s=Math.min(s,i),r=Math.max(r,i);return{x:n,y:s,width:o-n,height:r-s}}}exports.Line=Line,Line.prototype.className="Line",Line.prototype._attrsAffectingSize=["points","bezier","tension"],(0,Global_1._registerNode)(Line),Factory_1.Factory.addGetterSetter(Line,"closed",!1),Factory_1.Factory.addGetterSetter(Line,"bezier",!1),Factory_1.Factory.addGetterSetter(Line,"tension",0,(0,Validators_1.getNumberValidator)()),Factory_1.Factory.addGetterSetter(Line,"points",[],(0,Validators_1.getNumberArrayValidator)());
