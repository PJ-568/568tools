import{Util}from"./Util.js";import{getComponentValidator}from"./Validators.js";var GET="get",SET="set";export const Factory={addGetterSetter(t,e,r,o,a){Factory.addGetter(t,e,r),Factory.addSetter(t,e,o,a),Factory.addOverloadedGetterSetter(t,e)},addGetter(t,e,r){var o=GET+Util._capitalize(e);t.prototype[o]=t.prototype[o]||function(){var t=this.attrs[e];return void 0===t?r:t}},addSetter(t,e,r,o){var a=SET+Util._capitalize(e);t.prototype[a]||Factory.overWriteSetter(t,e,r,o)},overWriteSetter(t,e,r,o){var a=SET+Util._capitalize(e);t.prototype[a]=function(t){return r&&null!=t&&(t=r.call(this,t,e)),this._setAttr(e,t),o&&o.call(this),this}},addComponentsGetterSetter(t,e,r,o,a){var i,d,l=r.length,p=Util._capitalize,n=GET+p(e),c=SET+p(e);t.prototype[n]=function(){var t={};for(i=0;i<l;i++)t[d=r[i]]=this.getAttr(e+p(d));return t};var s=getComponentValidator(r);t.prototype[c]=function(t){var i,d=this.attrs[e];for(i in o&&(t=o.call(this,t)),s&&s.call(this,t,e),t)t.hasOwnProperty(i)&&this._setAttr(e+p(i),t[i]);return t||r.forEach((t=>{this._setAttr(e+p(t),void 0)})),this._fireChangeEvent(e,d,t),a&&a.call(this),this},Factory.addOverloadedGetterSetter(t,e)},addOverloadedGetterSetter(t,e){var r=Util._capitalize(e),o=SET+r,a=GET+r;t.prototype[e]=function(){return arguments.length?(this[o](arguments[0]),this):this[a]()}},addDeprecatedGetterSetter(t,e,r,o){Util.error("Adding deprecated "+e);var a=GET+Util._capitalize(e),i=e+" property is deprecated and will be removed soon. Look at Konva change log for more information.";t.prototype[a]=function(){Util.error(i);var t=this.attrs[e];return void 0===t?r:t},Factory.addSetter(t,e,o,(function(){Util.error(i)})),Factory.addOverloadedGetterSetter(t,e)},backCompat(t,e){Util.each(e,(function(e,r){var o=t.prototype[r],a=GET+Util._capitalize(e),i=SET+Util._capitalize(e);function d(){o.apply(this,arguments),Util.error('"'+e+'" method is deprecated and will be removed soon. Use ""'+r+'" instead.')}t.prototype[e]=d,t.prototype[a]=d,t.prototype[i]=d}))},afterSetFilter(){this._filterUpToDate=!1}};
