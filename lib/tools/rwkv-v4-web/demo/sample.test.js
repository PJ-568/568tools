const s=require("./sample");describe("sample",(()=>{it("greedySampling",(()=>{expect(s.greedySampling([0,1])).toEqual(1),expect(s.greedySampling([2,1])).toEqual(0)})),it("softmax",(()=>{const e=[.0021657,.00588697,.11824302,.87370431];s.softmax([-1,0,3,5]).forEach(((t,o)=>expect(t).toBeCloseTo(e[o])))})),it("choiceIndex",(()=>{function e(e){var t=0;const o=1e6;for(var l=0;l<o;l++)t+=s.choiceIndex(e);return t/o}expect(s.choiceIndex([0,1])).toEqual(1),expect(s.choiceIndex([1,0])).toEqual(0),expect(s.choiceIndex([1])).toEqual(0),expect(s.choiceIndex([0,0,0,0,0,1,0,0,0,0])).toEqual(5),expect(e([0,.5,.5])).toBeCloseTo(1.5,2),expect(e([.25,.25,.5])).toBeCloseTo(1.25,2)})),it("getMultinomialProbs",(()=>{expect(s.getMultinomialProbs([-1,0,3,5],1,.8)).toEqual([0,0,0,1]),expect(s.getMultinomialProbs([5,0,3,5],1,.8)).toEqual([.5,0,0,.5]),expect(s.getMultinomialProbs([5,5,5,5],1,.8)).toEqual([.25,.25,.25,.25]);const e=[.20753784191475178,.3096100782635963,.2534872925372871,.22936478728436485];s.getMultinomialProbs([2.1,2.5,2.3,2.2],1,.8).forEach(((t,o)=>expect(t).toBeCloseTo(e[o])))})),it("getMultinomialProbs with temp 0.5",(()=>{expect(s.getMultinomialProbs([-1,0,3,5],.5,.8)).toEqual([0,0,0,1]),expect(s.getMultinomialProbs([5,0,3,5],.5,.8)).toEqual([.5,0,0,.5]),expect(s.getMultinomialProbs([5,5,5,5],.5,.8)).toEqual([.25,.25,.25,.25]);const e=[2.1,2.5,2.3,2.2],t=[0,.549833997312478,.45016600268752205,0];console.log(s.getMultinomialProbs(e,1,.5)),s.getMultinomialProbs(e,1,.5).forEach(((e,o)=>expect(e).toBeCloseTo(t[o])))})),it("applyRepetitionPenalty with penalty of 1",(()=>{expect(s.applyRepetitionPenalty([-1,0,3,5],[0],1)).toEqual([-2,0,3,5]),expect(s.applyRepetitionPenalty([-1,0,3,5],[0,2,0],1)).toEqual([-3,0,2,5]),expect(s.applyRepetitionPenalty([-1,0,3,5],[],1)).toEqual([-1,0,3,5])})),it("find_cutoff",(()=>{expect(s.find_cutoff([.1,.25,.05,.6],.8)).toEqual(.25),expect(s.find_cutoff([.1,.25,.05,.6],.5)).toEqual(.6),expect(s.find_cutoff([.1,.25,.05,.6],.9)).toEqual(.1),expect(s.find_cutoff([.1,.25,.05,.6],.99)).toEqual(.05),expect(s.find_cutoff([1],.99)).toEqual(1)}))}));
