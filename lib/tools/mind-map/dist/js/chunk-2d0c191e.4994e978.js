(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c191e"],{4738:function(s,a,e){"use strict";e.r(a);var t=function(){var s=this;s._self._c;return s._m(0)},v=[function(){var s=this,a=s._self._c;return a("div",[a("h1",[s._v("内置工具方法")]),a("h2",[s._v("基础工具方法")]),a("p",[s._v("引用：")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" {walk, ...} "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'simple-mind-map/src/utils'")]),s._v("\n")])]),a("h3",[s._v("方法")]),a("h4",[s._v("walk(root, parent, beforeCallback, afterCallback, isRoot, layerIndex = 0, index = 0)")]),a("p",[s._v("深度优先遍历树")]),a("p",[a("code",[s._v("root")]),s._v("：要遍历的树的根节点")]),a("p",[a("code",[s._v("parent")]),s._v("：父节点")]),a("p",[a("code",[s._v("beforeCallback")]),s._v("：前序遍历回调函数，回调参数为：root, parent, isRoot, layerIndex, index")]),a("p",[a("code",[s._v("afterCallback")]),s._v("：后序遍历回调函数，回调参数为：root, parent, isRoot, layerIndex, index")]),a("p",[a("code",[s._v("isRoot")]),s._v("：是否是根节点")]),a("p",[a("code",[s._v("layerIndex")]),s._v("：节点层级")]),a("p",[a("code",[s._v("index")]),s._v("：节点在同级节点里的索引")]),a("p",[s._v("示例：")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("walk(tree, "),a("span",{staticClass:"hljs-literal"},[s._v("null")]),s._v(", "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {}, "),a("span",{staticClass:"hljs-function"},[s._v("() =>")]),s._v(" {}, "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(", "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(")\n")])]),a("h4",[s._v("bfsWalk(root, callback)")]),a("p",[s._v("广度优先遍历树")]),a("h4",[s._v("resizeImgSize(width, height, maxWidth, maxHeight)")]),a("p",[s._v("缩放图片的尺寸")]),a("p",[a("code",[s._v("width")]),s._v("：图片原本的宽")]),a("p",[a("code",[s._v("height")]),s._v("：图片原本的高")]),a("p",[a("code",[s._v("maxWidth")]),s._v("：要缩放到的宽")]),a("p",[a("code",[s._v("maxHeight")]),s._v("：要缩放到的高")]),a("p",[a("code",[s._v("maxWidth")]),s._v("和"),a("code",[s._v("maxHeight")]),s._v("可以同时都传，也可以只传一个")]),a("h4",[s._v("resizeImg(imgUrl, maxWidth, maxHeight)")]),a("p",[s._v("缩放图片，内部先加载图片，然后调用"),a("code",[s._v("resizeImgSize")]),s._v("方法，返回一个"),a("code",[s._v("promise")])]),a("h4",[s._v("simpleDeepClone(data)")]),a("p",[s._v("极简的深拷贝方法，只能针对全是基本数据的对象，否则会报错")]),a("h4",[s._v("copyRenderTree(tree, root)")]),a("p",[s._v("复制渲染树数据，示例：")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("copyRenderTree({}, "),a("span",{staticClass:"hljs-built_in"},[s._v("this")]),s._v(".mindMap.renderer.renderTree)\n")])]),a("h4",[s._v("copyNodeTree(tree, root, removeActiveState, keepId)")]),a("ul",[a("li",[a("p",[a("code",[s._v("removeActiveState")]),s._v("："),a("code",[s._v("Boolean")]),s._v("，默认为"),a("code",[s._v("false")]),s._v("，是否移除节点的激活状态")])]),a("li",[a("p",[a("code",[s._v("keepId")]),s._v("：v0.4.6+，"),a("code",[s._v("Boolean")]),s._v("，默认为"),a("code",[s._v("false")]),s._v("，是否保留被复制节点的"),a("code",[s._v("id")]),s._v("，默认会删除"),a("code",[s._v("id")]),s._v("防止节点"),a("code",[s._v("id")]),s._v("重复，但是对于移动节点的场景，节点原"),a("code",[s._v("id")]),s._v("需要保留")])])]),a("p",[s._v("复制节点树数据，主要是剔除其中的引用"),a("code",[s._v("node")]),s._v("实例的"),a("code",[s._v("_node")]),s._v("，然后复制"),a("code",[s._v("data")]),s._v("对象的数据，示例：")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("copyNodeTree({}, node)\n")])]),a("h4",[s._v("imgToDataUrl(src)")]),a("p",[s._v("图片转成dataURL")]),a("h4",[s._v("downloadFile(file, fileName)")]),a("p",[s._v("下载文件")]),a("h4",[s._v("throttle(fn, time = 300, ctx)")]),a("p",[s._v("节流函数")]),a("h4",[s._v("asyncRun(taskList, callback = () => {})")]),a("p",[s._v("异步执行任务队列，多个任务是同步执行的，没有先后顺序")]),a("h4",[s._v("degToRad(deg)")]),a("blockquote",[a("p",[s._v("v0.2.24+")])]),a("p",[s._v("角度转弧度")]),a("h4",[s._v("camelCaseToHyphen(str)")]),a("blockquote",[a("p",[s._v("v0.2.24+")])]),a("p",[s._v("驼峰转连字符")]),a("h4",[s._v("joinFontStr({ italic, bold, fontSize, fontFamily })")]),a("blockquote",[a("p",[s._v("v0.3.4+")])]),a("p",[s._v("拼接"),a("code",[s._v("css")]),s._v("字体的"),a("code",[s._v("font")]),s._v("属性值")]),a("h4",[s._v("measureText(text, { italic, bold, fontSize, fontFamily })")]),a("blockquote",[a("p",[s._v("v0.3.4+")])]),a("p",[s._v("测量文本的宽高，返回值：")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("{ width, height }\n")])]),a("h4",[s._v("getTextFromHtml(html)")]),a("p",[s._v("提取html字符串里的纯文本内容。")]),a("h4",[s._v("readBlob(blob)")]),a("blockquote",[a("p",[s._v("v0.5.9+")])]),a("p",[s._v("将"),a("code",[s._v("blob")]),s._v("数据转成"),a("code",[s._v("data:url")]),s._v("数据。")]),a("h2",[s._v("在canvas中模拟css的背景属性")]),a("p",[s._v("引入：")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" drawBackgroundImageToCanvas "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'simple-mind-map/src/utils/simulateCSSBackgroundInCanvas'")]),s._v("\n")])]),a("p",[s._v("使用：")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" width = "),a("span",{staticClass:"hljs-number"},[s._v("500")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" height = "),a("span",{staticClass:"hljs-number"},[s._v("500")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" img = "),a("span",{staticClass:"hljs-string"},[s._v("'/1.jpg'")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" canvas = "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".createElement("),a("span",{staticClass:"hljs-string"},[s._v("'canvas'")]),s._v(")\ncanvas.width = width\ncanvas.height = height\ndrawBackgroundImageToCanvas(ctx, width, height, img, {\n  "),a("span",{staticClass:"hljs-attr"},[s._v("backgroundRepeat")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'repeat-y'")]),s._v(",\n  "),a("span",{staticClass:"hljs-attr"},[s._v("backgroundSize")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'60%'")]),s._v(",\n  "),a("span",{staticClass:"hljs-attr"},[s._v("backgroundPosition")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v("'center center'")]),s._v("\n}, "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("err")]),s._v(") =>")]),s._v(" {\n  "),a("span",{staticClass:"hljs-keyword"},[s._v("if")]),s._v(" (err) {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 失败")]),s._v("\n  } "),a("span",{staticClass:"hljs-keyword"},[s._v("else")]),s._v(" {\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 成功")]),s._v("\n  }\n})\n")])]),a("h2",[s._v("LRU缓存类")]),a("blockquote",[a("p",[s._v("v0.5.10+")])]),a("p",[s._v("引入：")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" Lru "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'simple-mind-map/src/utils/Lru.js'")]),s._v("\n")])]),a("h3",[s._v("构造函数")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" lru = "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Lru(max)\n")])]),a("p",[a("code",[s._v("max")]),s._v("：指定最大缓存数量。")]),a("h3",[s._v("实例属性")]),a("h4",[s._v("size")]),a("p",[s._v("当前缓存的数量。")]),a("h4",[s._v("pool")]),a("p",[s._v("获取缓存池。")]),a("h3",[s._v("实例方法")]),a("h4",[s._v("add(key, value)")]),a("p",[s._v("添加缓存。")]),a("h4",[s._v("delete(key)")]),a("p",[s._v("删除指定缓存。")]),a("h4",[s._v("has(key)")]),a("p",[s._v("检查某个缓存是否存在。")]),a("h4",[s._v("get(key)")]),a("p",[s._v("获取某个缓存的值。")])])}],_={},l=_,n=e("2877"),o=Object(n["a"])(l,t,v,!1,null,null,null);a["default"]=o.exports}}]);