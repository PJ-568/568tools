(window.webpackJsonp=window.webpackJsonp||[]).push([["chunk-2d0e5089"],{9381:function(e,n,a){"use strict";a.r(n);var o={},t=a("2877"),d=Object(t.a)(o,(function(){return this._self._c,this._m(0)}),[function(){var e=this,n=e._self._c;return n("div",[n("h1",[e._v("command instance")]),n("p",[e._v("The "),n("code",[e._v("command")]),e._v(" instance is responsible for adding and executing commands. It includes many built-in commands and can also be added manually. A command refers to an operation that needs to add a copy to the history stack data. The "),n("code",[e._v("mindMap.command")]),e._v(' instance can be obtained through this."')]),n("h2",[e._v("Methods")]),n("h3",[e._v("add(name, fn)")]),n("p",[e._v("Add a command.")]),n("p",[n("code",[e._v("name")]),e._v(": Command name")]),n("p",[n("code",[e._v("fn")]),e._v(": Method to be executed by the command")]),n("h3",[e._v("remove(name, fn)")]),n("p",[e._v("Remove a command.")]),n("p",[n("code",[e._v("name")]),e._v(": Name of the command to be removed")]),n("p",[n("code",[e._v("fn")]),e._v(": Method to be removed, if not provided all methods for the command will be removed")]),n("h3",[e._v("getCopyData()")]),n("p",[e._v("Get a copy of the rendering tree data")]),n("h3",[e._v("clearHistory()")]),n("p",[e._v("Clear the history stack data")])])}],!1,null,null,null);n.default=d.exports}}]);
