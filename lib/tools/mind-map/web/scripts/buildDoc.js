const path=require("path"),fs=require("fs"),{transformMdToVue:transformMdToVue}=require("./transformMdToVue");let langList=["zh","en"];const transform=(e,r)=>{fs.readdirSync(e).forEach((t=>{let i=path.join(e,t);fs.statSync(i).isDirectory()&&compilerDir(i,t,r)}))},compilerDir=(e,r,t)=>{fs.readdirSync(e).forEach((i=>{i.endsWith(".md")&&compilerFile(e,i,r,t)}))},compilerFile=(e,r,t,i)=>{let o=path.join(e,r),a=path.join(e,"./index.vue"),s=fs.readFileSync(o,"utf-8"),n=/(^|\n\r)\s*#\s+([^\n\r]+)/g.exec(s);n&&n[2]&&addRouter(t,i,n[2]);let l=transformMdToVue(s);fs.writeFileSync(a,l)},addRouter=(e,r,t)=>{r.push({path:e,title:t})},createRouter=()=>{let e=`\n        export default ${JSON.stringify(routerTypeList.map((e=>({lang:e.lang,children:e.routerList}))))}\n    `;fs.writeFileSync(path.join(__dirname,"../src/pages/Doc/routerList.js"),e)},createCatalogList=()=>{};let routerTypeList=[];langList.forEach((e=>{let r=path.join(__dirname,"../src/pages/Doc/",`./${e}/`),t=[];transform(r,t),routerTypeList.push({lang:e,routerList:t})})),createRouter(),console.log("编译完成");
