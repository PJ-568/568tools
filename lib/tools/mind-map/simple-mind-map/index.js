import View from"./src/core/view/View";import Event from"./src/core/event/Event";import Render from"./src/core/render/Render";import merge from"deepmerge";import theme from"./src/themes";import Style from"./src/core/render/node/Style";import KeyCommand from"./src/core/command/KeyCommand";import Command from"./src/core/command/Command";import BatchExecution from"./src/utils/BatchExecution";import{layoutValueList,CONSTANTS}from"./src/constants/constant";import{SVG}from"@svgdotjs/svg.js";import{simpleDeepClone}from"./src/utils";import defaultTheme,{checkIsNodeSizeIndependenceConfig}from"./src/themes/default";import{defaultOpt}from"./src/constants/defaultOptions";class MindMap{constructor(e={}){this.opt=this.handleOpt(merge(defaultOpt,e)),this.el=this.opt.el,this.elRect=this.el.getBoundingClientRect(),this.width=this.elRect.width,this.height=this.elRect.height,this.svg=SVG().addTo(this.el).size(this.width,this.height),this.draw=this.svg.group(),this.uid=1,this.initTheme(),this.event=new Event({mindMap:this}),this.keyCommand=new KeyCommand({mindMap:this}),this.command=new Command({mindMap:this}),this.renderer=new Render({mindMap:this}),this.view=new View({mindMap:this,draw:this.draw}),this.batchExecution=new BatchExecution,MindMap.pluginList.forEach((e=>{this.initPlugin(e)})),this.render(),setTimeout((()=>{this.command.addHistory()}),0)}handleOpt(e){return layoutValueList.includes(e.layout)||(e.layout=CONSTANTS.LAYOUT.LOGICAL_STRUCTURE),e.theme=e.theme&&theme[e.theme]?e.theme:"default",e}render(e,t=""){this.batchExecution.push("render",(()=>{this.initTheme(),this.renderer.reRender=!1,this.renderer.render(e,t)}))}reRender(e,t=""){this.batchExecution.push("render",(()=>{this.draw.clear(),this.initTheme(),this.renderer.reRender=!0,this.renderer.render(e,t)}))}resize(){this.elRect=this.el.getBoundingClientRect(),this.width=this.elRect.width,this.height=this.elRect.height,this.svg.size(this.width,this.height)}on(e,t){this.event.on(e,t)}emit(e,...t){this.event.emit(e,...t)}off(e,t){this.event.off(e,t)}initTheme(){this.themeConfig=merge(theme[this.opt.theme],this.opt.themeConfig),Style.setBackgroundStyle(this.el,this.themeConfig)}setTheme(e){this.renderer.clearAllActive(),this.opt.theme=e,this.render(null,CONSTANTS.CHANGE_THEME)}getTheme(){return this.opt.theme}setThemeConfig(e){this.opt.themeConfig=e;let t=checkIsNodeSizeIndependenceConfig(e);this.render(null,t?"":CONSTANTS.CHANGE_THEME)}getCustomThemeConfig(){return this.opt.themeConfig}getThemeConfig(e){return void 0===e?this.themeConfig:this.themeConfig[e]}getConfig(e){return void 0===e?this.opt:this.opt[e]}updateConfig(e={}){this.opt=this.handleOpt(merge.all([defaultOpt,this.opt,e]))}getLayout(){return this.opt.layout}setLayout(e){layoutValueList.includes(e)||(e=CONSTANTS.LAYOUT.LOGICAL_STRUCTURE),this.opt.layout=e,this.view.reset(),this.renderer.setLayout(),this.render()}execCommand(...e){this.command.exec(...e)}setData(e){this.execCommand("CLEAR_ACTIVE_NODE"),this.command.clearHistory(),this.command.addHistory(),this.richText?this.renderer.renderTree=this.richText.handleSetData(e):this.renderer.renderTree=e,this.reRender((()=>{}),CONSTANTS.SET_DATA)}setFullData(e){e.root&&this.setData(e.root),e.layout&&this.setLayout(e.layout),e.theme&&(e.theme.template&&this.setTheme(e.theme.template),e.theme.config&&this.setThemeConfig(e.theme.config)),e.view&&this.view.setTransformData(e.view)}getData(e){let t=this.command.removeDataUid(this.command.getCopyData()),i={};return i=e?{layout:this.getLayout(),root:t,theme:{template:this.getTheme(),config:this.getCustomThemeConfig()},view:this.view.getTransformData()}:t,simpleDeepClone(i)}async export(...e){return await this.doExport.export(...e)}toPos(e,t){return{x:e-this.elRect.left,y:t-this.elRect.top}}setMode(e){[CONSTANTS.MODE.READONLY,CONSTANTS.MODE.EDIT].includes(e)&&(this.opt.readonly=e===CONSTANTS.MODE.READONLY,this.opt.readonly&&this.renderer.clearAllActive(),this.emit("mode_change",e))}getSvgData({paddingX:e=0,paddingY:t=0}={}){const i=this.svg,s=this.draw,h=i.width(),n=i.height(),r=s.transform(),o=this.el.getBoundingClientRect();s.scale(1/r.scaleX,1/r.scaleY);const a=s.rbox();a.width+=e,a.height+=t,s.translate(e/2,t/2),i.size(a.width,a.height),s.translate(-a.x+o.left,-a.y+o.top);let m=i.clone();return(a.width>h||a.height>n)&&this.watermark&&this.watermark.hasWatermark()&&(this.width=a.width,this.height=a.height,this.watermark.draw(),m=i.clone(),this.width=h,this.height=n,this.watermark.draw()),i.size(h,n),s.transform(r),{svg:m,svgHTML:m.svg(),rect:{...a,ratio:a.width/a.height},origWidth:h,origHeight:n,scaleX:r.scaleX,scaleY:r.scaleY}}addPlugin(e,t){-1===MindMap.hasPlugin(e)&&(MindMap.usePlugin(e,t),this.initPlugin(e))}removePlugin(e){let t=MindMap.hasPlugin(e);-1!==t&&(MindMap.pluginList.splice(t,1),this[e.instanceName]&&(this[e.instanceName].beforePluginRemove&&this[e.instanceName].beforePluginRemove(),delete this[e.instanceName]))}initPlugin(e){this[e.instanceName]=new e({mindMap:this,pluginOpt:e.pluginOpt})}destroy(){[...MindMap.pluginList].forEach((e=>{this[e.instanceName]=null})),this.event.unbind(),this.svg.remove(),Style.removeBackgroundStyle(this.el),this.el=null}}MindMap.pluginList=[],MindMap.usePlugin=(e,t={})=>(e.pluginOpt=t,MindMap.pluginList.push(e),MindMap),MindMap.hasPlugin=e=>MindMap.pluginList.findIndex((t=>t===e)),MindMap.defineTheme=(e,t={})=>{if(theme[e])return new Error("该主题名称已存在");theme[e]=merge(defaultTheme,t)};export default MindMap;
