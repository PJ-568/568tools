import{Rect,Polygon,Path}from"@svgdotjs/svg.js";import{CONSTANTS}from"../../../constants/constant";export default class Shape{constructor(e){this.node=e}getShapePadding(e,t,n,a){const A=this.node.getShape(),d=e+2*n,N=t+2*a,S=Math.abs(d-N);switch(A){case CONSTANTS.SHAPE.ROUNDED_RECTANGLE:return{paddingX:t>e?(t-e)/2:0,paddingY:0};case CONSTANTS.SHAPE.DIAMOND:return{paddingX:e/2,paddingY:t/2};case CONSTANTS.SHAPE.PARALLELOGRAM:case CONSTANTS.SHAPE.OUTER_TRIANGULAR_RECTANGLE:case CONSTANTS.SHAPE.INNER_TRIANGULAR_RECTANGLE:return{paddingX:n<=0?15:0,paddingY:0};case CONSTANTS.SHAPE.ELLIPSE:return{paddingX:n<=0?15:0,paddingY:a<=0?5:0};case CONSTANTS.SHAPE.CIRCLE:return{paddingX:N>d?S/2:0,paddingY:N<d?S/2:0};default:return{paddingX:0,paddingY:0}}}createShape(){const e=this.node.getShape();let{width:t,height:n}=this.node,a=null;return e===CONSTANTS.SHAPE.RECTANGLE?a=(new Rect).size(t,n):e===CONSTANTS.SHAPE.DIAMOND?a=this.createDiamond():e===CONSTANTS.SHAPE.PARALLELOGRAM?a=this.createParallelogram():e===CONSTANTS.SHAPE.ROUNDED_RECTANGLE?a=this.createRoundedRectangle():e===CONSTANTS.SHAPE.OCTAGONAL_RECTANGLE?a=this.createOctagonalRectangle():e===CONSTANTS.SHAPE.OUTER_TRIANGULAR_RECTANGLE?a=this.createOuterTriangularRectangle():e===CONSTANTS.SHAPE.INNER_TRIANGULAR_RECTANGLE?a=this.createInnerTriangularRectangle():e===CONSTANTS.SHAPE.ELLIPSE?a=this.createEllipse():e===CONSTANTS.SHAPE.CIRCLE&&(a=this.createCircle()),a}createDiamond(){let{width:e,height:t}=this.node,n=e/2,a=t/2,A=n,d=e,N=a,S=n,i=t,T=a;return(new Polygon).plot([[A,0],[d,N],[S,i],[0,T]])}createParallelogram(){let{paddingX:e}=this.node.getPaddingVale();e=e||this.node.shapePadding.paddingX;let{width:t,height:n}=this.node;return(new Polygon).plot([[e,0],[t,0],[t-e,n],[0,n]])}createRoundedRectangle(){let{width:e,height:t}=this.node,n=t/2;return(new Path).plot(`\n      M${n},0\n      L${e-n},0\n      A${t/2},${t/2} 0 0,1 ${e-n},${t} \n      L${n},${t}\n      A${t/2},${t/2} 0 0,1 ${n},0\n    `)}createOctagonalRectangle(){let{width:e,height:t}=this.node;return(new Polygon).plot([[0,5],[5,0],[e-5,0],[e,5],[e,t-5],[e-5,t],[5,t],[0,t-5]])}createOuterTriangularRectangle(){let{paddingX:e}=this.node.getPaddingVale();e=e||this.node.shapePadding.paddingX;let{width:t,height:n}=this.node;return(new Polygon).plot([[e,0],[t-e,0],[t,n/2],[t-e,n],[e,n],[0,n/2]])}createInnerTriangularRectangle(){let{paddingX:e}=this.node.getPaddingVale();e=e||this.node.shapePadding.paddingX;let{width:t,height:n}=this.node;return(new Polygon).plot([[0,0],[t,0],[t-e/2,n/2],[t,n],[0,n],[e/2,n/2]])}createEllipse(){let{width:e,height:t}=this.node,n=e/2,a=t/2;return(new Path).plot(`\n      M${n},0\n      A${n},${a} 0 0,1 ${n},${t} \n      M${n},${t} \n      A${n},${a} 0 0,1 ${n},0 \n    `)}createCircle(){let{width:e,height:t}=this.node,n=e/2,a=t/2;return(new Path).plot(`\n      M${n},0\n      A${n},${a} 0 0,1 ${n},${t} \n      M${n},${t} \n      A${n},${a} 0 0,1 ${n},0 \n    `)}}export const shapeList=[CONSTANTS.SHAPE.RECTANGLE,CONSTANTS.SHAPE.DIAMOND,CONSTANTS.SHAPE.PARALLELOGRAM,CONSTANTS.SHAPE.ROUNDED_RECTANGLE,CONSTANTS.SHAPE.OCTAGONAL_RECTANGLE,CONSTANTS.SHAPE.OUTER_TRIANGULAR_RECTANGLE,CONSTANTS.SHAPE.INNER_TRIANGULAR_RECTANGLE,CONSTANTS.SHAPE.ELLIPSE,CONSTANTS.SHAPE.CIRCLE];
