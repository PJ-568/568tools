import JSZip from"jszip";import xmlConvert from"xml-js";const parseXmindFile=e=>new Promise(((t,n)=>{JSZip.loadAsync(e).then((async e=>{try{let l="";if(e.files["content.json"]){let t=await e.files["content.json"].async("string");l=transformXmind(t)}else if(e.files["content.xml"]){let t=await e.files["content.xml"].async("string"),n=xmlConvert.xml2json(t);l=transformOldXmind(n)}l?t(l):n(new Error("解析失败"))}catch(e){n(e)}}),(e=>{n(e)}))})),transformXmind=e=>{let t=JSON.parse(e)[0].rootTopic,n={},l=(e,t)=>{t.data={text:e.title},e.notes&&(t.data.note=(e.notes.realHTML||e.notes.plain).content),e.href&&/^https?:\/\//.test(e.href)&&(t.data.hyperlink=e.href),e.labels&&e.labels.length>0&&(t.data.tag=e.labels),t.children=[],e.children&&e.children.attached&&e.children.attached.length>0&&e.children.attached.forEach((e=>{let n={};t.children.push(n),l(e,n)}))};return l(t,n),n},transformOldXmind=e=>{let t=JSON.parse(e).elements,n=null,l=e=>{for(let t=0;t<e.length;t++)if(!n&&"topic"===e[t].name)return void(n=e[t]);e.forEach((e=>{l(e.elements)}))};l(t);let r={},a=(e,t)=>e.find((e=>e.name===t)),s=(e,t)=>{let n=e.elements;t.data={text:a(n,"title").elements[0].text};try{let e=a(n,"notes");e&&(t.data.note=e.elements[0].elements[0].elements[0].text)}catch(e){console.log(e)}try{e.attributes&&e.attributes["xlink:href"]&&/^https?:\/\//.test(e.attributes["xlink:href"])&&(t.data.hyperlink=e.attributes["xlink:href"])}catch(e){console.log(e)}try{let e=a(n,"labels");e&&(t.data.tag=e.elements.map((e=>e.elements[0].text)))}catch(e){console.log(e)}t.children=[];let l=a(n,"children");l&&l.elements&&l.elements.length>0&&l.elements.forEach((e=>{if("topics"===e.name)e.elements.forEach((e=>{let n={};t.children.push(n),s(e,n)}));else{let n={};t.children.push(n),s(e,n)}}))};return s(n,r),r};export default{parseXmindFile:parseXmindFile,transformXmind:transformXmind,transformOldXmind:transformOldXmind};
