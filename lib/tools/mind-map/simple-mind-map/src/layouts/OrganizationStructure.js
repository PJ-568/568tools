import Base from"./Base";import{walk,asyncRun}from"../utils";class OrganizationStructure extends Base{constructor(e={}){super(e)}doLayout(e){asyncRun([()=>{this.computedBaseValue()},()=>{this.computedLeftValue()},()=>{this.adjustLeftValue()},()=>{e(this.root)}])}computedBaseValue(){walk(this.renderer.renderTree,null,((e,t,i,n)=>{let r=this.createNode(e,t,i,n);if(i?this.setNodeCenter(r):r.top=t._node.top+t._node.height+this.getMarginX(n),!e.data.expand)return!0}),((e,t,i,n)=>{let r=!1===e.data.expand?0:e._node.children.length;e._node.childrenAreaWidth=r?e._node.children.reduce(((e,t)=>e+t.width),0)+(r+1)*this.getMarginY(n+1):0}),!0,0)}computedLeftValue(){walk(this.root,null,((e,t,i,n)=>{if(e.nodeData.data.expand&&e.children&&e.children.length){let t=this.getMarginY(n+1),i=e.left+e.width/2-e.childrenAreaWidth/2+t;e.children.forEach((e=>{e.left=i,i+=e.width+t}))}}),null,!0)}adjustLeftValue(){walk(this.root,null,((e,t,i,n)=>{if(!e.nodeData.data.expand)return;let r=e.childrenAreaWidth-2*this.getMarginY(n+1)-e.width;r>0&&this.updateBrothers(e,r/2)}),null,!0)}updateBrothers(e,t){if(e.parent){let i=e.parent.children,n=i.findIndex((t=>t===e));i.forEach(((e,i)=>{if(e.hasCustomPosition())return;let r=0;i<n?r=-t:i>n&&(r=t),e.left+=r,e.children&&e.children.length&&this.updateChildren(e.children,"left",r)})),this.updateBrothers(e.parent,t)}}renderLine(e,t,i,n){"direct"===n?this.renderLineDirect(e,t,i):this.renderLineStraight(e,t,i)}renderLineDirect(e,t,i){if(e.children.length<=0)return[];let{left:n,top:r,width:a,height:l}=e,h=n+a/2,d=r+l;e.children.forEach(((e,n)=>{let r=e.left+e.width/2,a=e.top,l=this.mindMap.themeConfig.nodeUseLineStyle?` L ${e.left},${a} L ${e.left+e.width},${a}`:"",o=`M ${h},${d} L ${r},${a}`+l;t[n].plot(o),i&&i(t[n],e)}))}renderLineStraight(e,t,i){if(e.children.length<=0)return[];let{left:n,top:r,width:a,height:l,expandBtnSize:h,isRoot:d}=e;this.mindMap.opt.alwaysShowExpandBtn||(h=0);let o=n+a/2,s=r+l,p=.7*this.getMarginX(e.layerIndex+1),u=1/0,c=-1/0,f=e.children.length;e.children.forEach(((e,n)=>{let r=e.left+e.width/2,a=s+p>e.top?e.top+e.height:e.top;r<u&&(u=r),r>c&&(c=r);let l=this.mindMap.themeConfig.nodeUseLineStyle?` L ${e.left},${a} L ${e.left+e.width},${a}`:"",h=`M ${r},${s+p} L ${r},${a}`+l;t[n].plot(h),i&&i(t[n],e)})),u=Math.min(o,u),c=Math.max(o,c);let g=this.draw.path();if(e.style.line(g),h=f>0&&!d?h:0,g.plot(`M ${o},${s+h} L ${o},${s+p}`),e._lines.push(g),i&&i(g,e),f>0){let t=this.draw.path();e.style.line(t),t.plot(`M ${u},${s+p} L ${c},${s+p}`),e._lines.push(t),i&&i(t,e)}}renderExpandBtn(e,t){let{width:i,height:n,expandBtnSize:r}=e,{translateX:a,translateY:l}=t.transform();t.translate(i/2-r/2-a,n+r/2-l)}renderGeneralization(e,t,i){let{bottom:n,left:r,right:a,generalizationLineMargin:l,generalizationNodeMargin:h}=this.getNodeBoundaries(e,"v"),d=n+l,o=`M ${r},${d} Q ${r+(a-r)/2},${d+20} ${a},${n+l}`;t.plot(o),i.top=n+h,i.left=r+(a-r-i.width)/2}}export default OrganizationStructure;
