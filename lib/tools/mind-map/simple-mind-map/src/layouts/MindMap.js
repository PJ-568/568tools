import Base from"./Base";import{walk,asyncRun}from"../utils";class MindMap extends Base{constructor(e={}){super(e)}doLayout(e){asyncRun([()=>{this.computedBaseValue()},()=>{this.computedTopValue()},()=>{this.adjustTopValue()},()=>{e(this.root)}])}computedBaseValue(){walk(this.renderer.renderTree,null,((e,t,i,r,n)=>{let h=this.createNode(e,t,i,r);if(i?this.setNodeCenter(h):(t._node.dir?h.dir=t._node.dir:h.dir=n%2==0?"right":"left",h.left="right"===h.dir?t._node.left+t._node.width+this.getMarginX(r):t._node.left-this.getMarginX(r)-h.width),!e.data.expand)return!0}),((e,t,i,r)=>{if(!e.data.expand)return e._node.leftChildrenAreaHeight=0,void(e._node.rightChildrenAreaHeight=0);let n=0,h=0,d=0,l=0;e._node.children.forEach((e=>{"left"===e.dir?(n++,d+=e.height):(h++,l+=e.height)})),e._node.leftChildrenAreaHeight=d+(n+1)*this.getMarginY(r+1),e._node.rightChildrenAreaHeight=l+(h+1)*this.getMarginY(r+1)}),!0,0)}computedTopValue(){walk(this.root,null,((e,t,i,r)=>{if(e.nodeData.data.expand&&e.children&&e.children.length){let t=this.getMarginY(r+1),i=e.top+e.height/2+t,n=i-e.leftChildrenAreaHeight/2,h=i-e.rightChildrenAreaHeight/2;e.children.forEach((e=>{"left"===e.dir?(e.top=n,n+=e.height+t):(e.top=h,h+=e.height+t)}))}}),null,!0)}adjustTopValue(){walk(this.root,null,((e,t,i,r)=>{if(!e.nodeData.data.expand)return;let n=2*this.getMarginY(r+1)+e.height,h=e.leftChildrenAreaHeight-n,d=e.rightChildrenAreaHeight-n;(h>0||d>0)&&this.updateBrothers(e,h/2,d/2)}),null,!0)}updateBrothers(e,t,i){if(e.parent){let r=e.parent.children.filter((t=>t.dir===e.dir)),n=r.findIndex((t=>t===e));r.forEach(((e,r)=>{if(e.hasCustomPosition())return;let h=0,d="left"===e.dir?t:i;r<n?h=-d:r>n&&(h=d),e.top+=h,e.children&&e.children.length&&this.updateChildren(e.children,"top",h)})),this.updateBrothers(e.parent,t,i)}}renderLine(e,t,i,r){"curve"===r?this.renderLineCurve(e,t,i):"direct"===r?this.renderLineDirect(e,t,i):this.renderLineStraight(e,t,i)}renderLineStraight(e,t,i){if(e.children.length<=0)return[];let{left:r,top:n,width:h,height:d,expandBtnSize:l}=e;this.mindMap.opt.alwaysShowExpandBtn||(l=0);let a=.6*(this.getMarginX(e.layerIndex+1)-l),o=this.mindMap.themeConfig.nodeUseLineStyle;e.children.forEach(((s,f)=>{let g=0,p=0,u=o?s.width:0;"left"===s.dir?(p=-a,g=0===e.layerIndex?r:r-l,u=-u):(p=a,g=0===e.layerIndex?r+h:r+h+l);let c=n+d/2,$="left"===s.dir?s.left+s.width:s.left,m=s.top+s.height/2;c=o&&!e.isRoot?c+d/2:c,m=o?m+s.height/2:m;let M=`M ${g},${c} L ${g+p},${c} L ${g+p},${m} L ${$+u},${m}`;t[f].plot(M),i&&i(t[f],s)}))}renderLineDirect(e,t,i){if(e.children.length<=0)return[];let{left:r,top:n,width:h,height:d,expandBtnSize:l}=e;this.mindMap.opt.alwaysShowExpandBtn||(l=0);let a=this.mindMap.themeConfig.nodeUseLineStyle;e.children.forEach(((o,s)=>{let f=0===e.layerIndex?r+h/2:"left"===o.dir?r-l:r+h+l,g=n+d/2,p="left"===o.dir?o.left+o.width:o.left,u=o.top+o.height/2;g=a&&!e.isRoot?g+d/2:g,u=a?u+o.height/2:u;let c="";a&&(c="left"===o.dir?` L ${o.left},${u}`:` L ${o.left+o.width},${u}`);let $=`M ${f},${g} L ${p},${u}`+c;t[s].plot($),i&&i(t[s],o)}))}renderLineCurve(e,t,i){if(e.children.length<=0)return[];let{left:r,top:n,width:h,height:d,expandBtnSize:l}=e;this.mindMap.opt.alwaysShowExpandBtn||(l=0);let a=this.mindMap.themeConfig.nodeUseLineStyle;e.children.forEach(((o,s)=>{let f=0===e.layerIndex?r+h/2:"left"===o.dir?r-l:r+h+l,g=n+d/2,p="left"===o.dir?o.left+o.width:o.left,u=o.top+o.height/2,c="";g=a&&!e.isRoot?g+d/2:g,u=a?u+o.height/2:u;let $="";this.mindMap.themeConfig.nodeUseLineStyle&&($="left"===o.dir?` L ${o.left},${u}`:` L ${o.left+o.width},${u}`),c=e.isRoot?this.quadraticCurvePath(f,g,p,u)+$:this.cubicBezierPath(f,g,p,u)+$,t[s].plot(c),i&&i(t[s],o)}))}renderExpandBtn(e,t){let{width:i,height:r,expandBtnSize:n}=e,{translateX:h,translateY:d}=t.transform(),l=this.mindMap.themeConfig.nodeUseLineStyle?r/2:0,a="left"===e.dir?0-n:i,o=r/2+l;if(a===h&&o===d)return;let s=a-h,f=o-d;t.translate(s,f)}renderGeneralization(e,t,i){let r="left"===e.dir,{top:n,bottom:h,left:d,right:l,generalizationLineMargin:a,generalizationNodeMargin:o}=this.getNodeBoundaries(e,"h",r),s=r?d-a:l+a,f=`M ${s},${n} Q ${s+(r?-20:20)},${n+(h-n)/2} ${s},${h}`;t.plot(f),i.left=s+(r?-o:o)-(r?i.width:0),i.top=n+(h-n-i.height)/2}}export default MindMap;
