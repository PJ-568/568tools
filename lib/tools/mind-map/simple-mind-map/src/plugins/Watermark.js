import{Text,G}from"@svgdotjs/svg.js";import{degToRad,camelCaseToHyphen}from"../utils";import merge from"deepmerge";class Watermark{constructor(t={}){this.mindMap=t.mindMap,this.lineSpacing=0,this.textSpacing=0,this.angle=0,this.text="",this.textStyle={},this.watermarkDraw=this.mindMap.svg.group().css({"pointer-events":"none","user-select":"none"}),this.maxLong=Math.sqrt(Math.pow(this.mindMap.width,2)+Math.pow(this.mindMap.height,2)),this.updateWatermark(this.mindMap.opt.watermarkConfig||{})}hasWatermark(){return!!this.text.trim()}handleConfig({text:t,lineSpacing:e,textSpacing:a,angle:i,textStyle:s}){this.text=void 0===t?"":String(t).trim(),this.lineSpacing="number"==typeof e&&e>0?e:100,this.textSpacing="number"==typeof a&&a>0?a:100,this.angle="number"==typeof i&&i>=0&&i<=90?i:30,this.textStyle=Object.assign(this.textStyle,s||{})}draw(){if(this.watermarkDraw.clear(),!this.hasWatermark())return;let t=0;for(;t<this.mindMap.width;)this.drawText(t),t+=this.lineSpacing/Math.sin(degToRad(this.angle));let e=this.lineSpacing/Math.cos(degToRad(this.angle))||this.lineSpacing,a=e;for(;a<this.mindMap.height;)this.drawText(0,a),a+=e}drawText(t,e){let a=Math.min(this.maxLong,(this.mindMap.width-t)/Math.cos(degToRad(this.angle))),i=new G,s=null,r=0,n=-1;for(;r<a;){let t=(new Text).text(this.text);i.add(t),t.transform({translateX:r}),this.setTextStyle(t),s=i.bbox(),-1===n&&(n=s.height),r=s.width+this.textSpacing}let h={rotate:this.angle,origin:"top left",translateX:t,translateY:n};void 0!==e&&(h.translateY=e+n),i.transform(h),this.watermarkDraw.add(i)}setTextStyle(t){Object.keys(this.textStyle).forEach((e=>{let a=this.textStyle[e];"color"===e?t.fill(a):t.css(camelCaseToHyphen(e),a)}))}updateWatermark(t){this.mindMap.opt.watermarkConfig=merge(this.mindMap.opt.watermarkConfig,t),this.handleConfig(t),this.draw()}}Watermark.instanceName="watermark";export default Watermark;
