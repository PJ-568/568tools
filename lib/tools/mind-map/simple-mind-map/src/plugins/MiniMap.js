class MiniMap{constructor(t){this.mindMap=t.mindMap,this.isMousedown=!1,this.mousedownPos={x:0,y:0},this.startViewPos={x:0,y:0}}calculationMiniMap(t,i){let{svgHTML:s,rect:o,origWidth:e,origHeight:a,scaleX:h,scaleY:n}=this.mindMap.getSvgData(),M=0,d=0;t/i>o.ratio?(d=i,M=o.ratio*d):(M=t,d=M/o.ratio);let m=M/o.width,p=(t-M)/2,r=(i-d)/2,w=o.x-(o.width*h-o.width)/2,x=o.x2+(o.width*h-o.width)/2,l=o.y-(o.height*n-o.height)/2,u=o.y2+(o.height*n-o.height)/2,g=o.width*h,c=o.height*n,y={left:0,top:0,right:0,bottom:0};return y.left=Math.max(0,-w/g*M)+p+"px",y.right=Math.max(0,(x-e)/g*M)+p+"px",y.top=Math.max(0,-l/c*d)+r+"px",y.bottom=Math.max(0,(u-a)/c*d)+r+"px",{svgHTML:s,viewBoxStyle:y,miniMapBoxScale:m,miniMapBoxLeft:p,miniMapBoxTop:r}}onMousedown(t){this.isMousedown=!0,this.mousedownPos={x:t.clientX,y:t.clientY};let i=this.mindMap.view.getTransformData();this.startViewPos={x:i.state.x,y:i.state.y}}onMousemove(t,i=5){if(!this.isMousedown)return;let s=t.clientX-this.mousedownPos.x,o=t.clientY-this.mousedownPos.y;this.mindMap.view.translateXTo(s*i+this.startViewPos.x),this.mindMap.view.translateYTo(o*i+this.startViewPos.y)}onMouseup(){this.isMousedown=!1}}MiniMap.instanceName="miniMap";export default MiniMap;
